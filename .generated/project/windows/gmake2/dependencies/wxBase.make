# Alternative GNU Make project makefile autogenerated by Premake

ifndef config
  config=debug_x64
endif

ifndef verbose
  SILENT = @
endif

.PHONY: clean prebuild prelink

SHELLTYPE := msdos
ifeq (,$(ComSpec)$(COMSPEC))
  SHELLTYPE := posix
endif
ifeq (/bin,$(findstring /bin,$(SHELL)))
  SHELLTYPE := posix
endif

# Configurations
# #############################################

INCLUDES += -I../../../../../src/Dependencies/wxWidgets/include -I../../../../../src/Dependencies/wxWidgets/include/msvc -I../../../../../src/Dependencies/wxWidgets/src/regex -I../../../../../src/Dependencies/zlib-ng
FORCE_INCLUDE +=
ALL_CPPFLAGS += $(CPPFLAGS) -MMD -MP $(DEFINES) $(INCLUDES)
ALL_RESFLAGS += $(RESFLAGS) $(DEFINES) $(INCLUDES)
LINKCMD = $(CXX) -o "$@" $(OBJECTS) $(RESOURCES) $(ALL_LDFLAGS) $(LIBS)
define PREBUILDCMDS
endef
define PRELINKCMDS
endef

ifeq ($(config),debug_x64)
RESCOMP = windres
TARGETDIR = ../../../../build/windows/gmake2/output/x64/Debug
TARGET = $(TARGETDIR)/wxBase64d.dll
OBJDIR = ../../../../build/windows/gmake2/intermediate/x64/Debug/wxBase
DEFINES += -DUNICODE -D_UNICODE -DEA_COMPILER_NO_RTTI -D_DEBUG -DDEBUG -DWIN32 -D_WINDOWS -DWIN64 -DNOPCH -DWXBUILDING -DwxUSE_ZLIB_H_IN_PATH -D_CRT_SECURE_NO_DEPRECATE=1 -D_CRT_NON_CONFORMING_SWPRINTFS=1 -D_SCL_SECURE_NO_WARNINGS=1 -DXML_STATIC -DWXMAKINGDLL_BASE -D__WXMSW__ -DwxUSE_GUI=0 -DwxUSE_BASE=1
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -ffast-math -Og -g -Wall -Wextra
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -ffast-math -Og -g -Wall -Wextra -std=c++1z -fno-rtti
LIBS += ../../../../build/windows/gmake2/output/x64/Debug/Engine.lib ../../../../build/windows/gmake2/output/x64/Debug/Memory64d.lib ../../../../build/windows/gmake2/output/x64/Debug/zlib-ng.lib ../../../../build/windows/gmake2/output/x64/Debug/wxRegex.lib
LDDEPS += ../../../../build/windows/gmake2/output/x64/Debug/Engine.lib ../../../../build/windows/gmake2/output/x64/Debug/Memory64d.lib ../../../../build/windows/gmake2/output/x64/Debug/zlib-ng.lib ../../../../build/windows/gmake2/output/x64/Debug/wxRegex.lib
ALL_LDFLAGS += $(LDFLAGS) -L/usr/lib64 -m64 -shared -Wl,--out-implib="../../../../build/windows/gmake2/output/x64/Debug/wxBase64d.lib"
define POSTBUILDCMDS
	@echo Running postbuild commands
	IF NOT EXIST ..\..\..\..\..\workingdir\bin (mkdir ..\..\..\..\..\workingdir\bin)
	IF EXIST ..\..\..\..\build\windows\gmake2\output\x64\Debug\wxBase64d.dll\ (xcopy /Q /E /Y /I ..\..\..\..\build\windows\gmake2\output\x64\Debug\wxBase64d.dll ..\..\..\..\..\workingdir\bin > nul) ELSE (xcopy /Q /Y /I ..\..\..\..\build\windows\gmake2\output\x64\Debug\wxBase64d.dll ..\..\..\..\..\workingdir\bin > nul)
endef
endif

ifeq ($(config),release_x64)
RESCOMP = windres
TARGETDIR = ../../../../build/windows/gmake2/output/x64/Release
TARGET = $(TARGETDIR)/wxBase64.dll
OBJDIR = ../../../../build/windows/gmake2/intermediate/x64/Release/wxBase
DEFINES += -DUNICODE -D_UNICODE -DEA_COMPILER_NO_RTTI -DNDEBUG -DWIN32 -D_WINDOWS -DWIN64 -DNOPCH -DWXBUILDING -DwxUSE_ZLIB_H_IN_PATH -D_CRT_SECURE_NO_DEPRECATE=1 -D_CRT_NON_CONFORMING_SWPRINTFS=1 -D_SCL_SECURE_NO_WARNINGS=1 -DXML_STATIC -DWXMAKINGDLL_BASE -D__WXMSW__ -DwxUSE_GUI=0 -DwxUSE_BASE=1
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -flto -ffast-math -O3 -g -Wall -Wextra
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -flto -ffast-math -O3 -g -Wall -Wextra -std=c++1z -fno-rtti
LIBS += ../../../../build/windows/gmake2/output/x64/Release/Engine.lib ../../../../build/windows/gmake2/output/x64/Release/Memory64.lib ../../../../build/windows/gmake2/output/x64/Release/zlib-ng.lib ../../../../build/windows/gmake2/output/x64/Release/wxRegex.lib
LDDEPS += ../../../../build/windows/gmake2/output/x64/Release/Engine.lib ../../../../build/windows/gmake2/output/x64/Release/Memory64.lib ../../../../build/windows/gmake2/output/x64/Release/zlib-ng.lib ../../../../build/windows/gmake2/output/x64/Release/wxRegex.lib
ALL_LDFLAGS += $(LDFLAGS) -L/usr/lib64 -m64 -flto -shared -Wl,--out-implib="../../../../build/windows/gmake2/output/x64/Release/wxBase64.lib"
define POSTBUILDCMDS
	@echo Running postbuild commands
	IF NOT EXIST ..\..\..\..\..\workingdir\bin (mkdir ..\..\..\..\..\workingdir\bin)
	IF EXIST ..\..\..\..\build\windows\gmake2\output\x64\Release\wxBase64.dll\ (xcopy /Q /E /Y /I ..\..\..\..\build\windows\gmake2\output\x64\Release\wxBase64.dll ..\..\..\..\..\workingdir\bin > nul) ELSE (xcopy /Q /Y /I ..\..\..\..\build\windows\gmake2\output\x64\Release\wxBase64.dll ..\..\..\..\..\workingdir\bin > nul)
endef
endif

ifeq ($(config),debug_clang_x64)
ifeq ($(origin CC), default)
  CC = clang
endif
ifeq ($(origin CXX), default)
  CXX = clang++
endif
ifeq ($(origin AR), default)
  AR = ar
endif
TARGETDIR = ../../../../build/windows/gmake2/output/x64/Debug_Clang
TARGET = $(TARGETDIR)/wxBase64d.dll
OBJDIR = ../../../../build/windows/gmake2/intermediate/x64/Debug_Clang/wxBase
DEFINES += -DUNICODE -D_UNICODE -DEA_COMPILER_NO_RTTI -D_DEBUG -DDEBUG -DWIN32 -D_WINDOWS -DWIN64 -DNOPCH -DWXBUILDING -DwxUSE_ZLIB_H_IN_PATH -D_CRT_SECURE_NO_DEPRECATE=1 -D_CRT_NON_CONFORMING_SWPRINTFS=1 -D_SCL_SECURE_NO_WARNINGS=1 -DXML_STATIC -DWXMAKINGDLL_BASE -D__WXMSW__ -DwxUSE_GUI=0 -DwxUSE_BASE=1
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -ffast-math -O0 -g -Wall -Wextra
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -ffast-math -O0 -g -Wall -Wextra -std=c++1z -fno-rtti
LIBS += ../../../../build/windows/gmake2/output/x64/Debug_Clang/Engine.lib ../../../../build/windows/gmake2/output/x64/Debug_Clang/Memory64d.lib ../../../../build/windows/gmake2/output/x64/Debug_Clang/zlib-ng.lib ../../../../build/windows/gmake2/output/x64/Debug_Clang/wxRegex.lib
LDDEPS += ../../../../build/windows/gmake2/output/x64/Debug_Clang/Engine.lib ../../../../build/windows/gmake2/output/x64/Debug_Clang/Memory64d.lib ../../../../build/windows/gmake2/output/x64/Debug_Clang/zlib-ng.lib ../../../../build/windows/gmake2/output/x64/Debug_Clang/wxRegex.lib
ALL_LDFLAGS += $(LDFLAGS) -L/usr/lib64 -m64 -shared -Wl,--out-implib="../../../../build/windows/gmake2/output/x64/Debug_Clang/wxBase64d.lib"
define POSTBUILDCMDS
	@echo Running postbuild commands
	IF NOT EXIST ..\..\..\..\..\workingdir\bin (mkdir ..\..\..\..\..\workingdir\bin)
	IF EXIST ..\..\..\..\build\windows\gmake2\output\x64\Debug_Clang\wxBase64d.dll\ (xcopy /Q /E /Y /I ..\..\..\..\build\windows\gmake2\output\x64\Debug_Clang\wxBase64d.dll ..\..\..\..\..\workingdir\bin > nul) ELSE (xcopy /Q /Y /I ..\..\..\..\build\windows\gmake2\output\x64\Debug_Clang\wxBase64d.dll ..\..\..\..\..\workingdir\bin > nul)
endef
endif

ifeq ($(config),release_clang_x64)
ifeq ($(origin CC), default)
  CC = clang
endif
ifeq ($(origin CXX), default)
  CXX = clang++
endif
ifeq ($(origin AR), default)
  AR = ar
endif
TARGETDIR = ../../../../build/windows/gmake2/output/x64/Release_Clang
TARGET = $(TARGETDIR)/wxBase64.dll
OBJDIR = ../../../../build/windows/gmake2/intermediate/x64/Release_Clang/wxBase
DEFINES += -DUNICODE -D_UNICODE -DEA_COMPILER_NO_RTTI -DNDEBUG -DWIN32 -D_WINDOWS -DWIN64 -DNOPCH -DWXBUILDING -DwxUSE_ZLIB_H_IN_PATH -D_CRT_SECURE_NO_DEPRECATE=1 -D_CRT_NON_CONFORMING_SWPRINTFS=1 -D_SCL_SECURE_NO_WARNINGS=1 -DXML_STATIC -DWXMAKINGDLL_BASE -D__WXMSW__ -DwxUSE_GUI=0 -DwxUSE_BASE=1
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -flto -ffast-math -O3 -g -Wall -Wextra
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -flto -ffast-math -O3 -g -Wall -Wextra -std=c++1z -fno-rtti
LIBS += ../../../../build/windows/gmake2/output/x64/Release_Clang/Engine.lib ../../../../build/windows/gmake2/output/x64/Release_Clang/Memory64.lib ../../../../build/windows/gmake2/output/x64/Release_Clang/zlib-ng.lib ../../../../build/windows/gmake2/output/x64/Release_Clang/wxRegex.lib
LDDEPS += ../../../../build/windows/gmake2/output/x64/Release_Clang/Engine.lib ../../../../build/windows/gmake2/output/x64/Release_Clang/Memory64.lib ../../../../build/windows/gmake2/output/x64/Release_Clang/zlib-ng.lib ../../../../build/windows/gmake2/output/x64/Release_Clang/wxRegex.lib
ALL_LDFLAGS += $(LDFLAGS) -L/usr/lib64 -m64 -flto -shared -Wl,--out-implib="../../../../build/windows/gmake2/output/x64/Release_Clang/wxBase64.lib"
define POSTBUILDCMDS
	@echo Running postbuild commands
	IF NOT EXIST ..\..\..\..\..\workingdir\bin (mkdir ..\..\..\..\..\workingdir\bin)
	IF EXIST ..\..\..\..\build\windows\gmake2\output\x64\Release_Clang\wxBase64.dll\ (xcopy /Q /E /Y /I ..\..\..\..\build\windows\gmake2\output\x64\Release_Clang\wxBase64.dll ..\..\..\..\..\workingdir\bin > nul) ELSE (xcopy /Q /Y /I ..\..\..\..\build\windows\gmake2\output\x64\Release_Clang\wxBase64.dll ..\..\..\..\..\workingdir\bin > nul)
endef
endif

ifeq ($(config),profile_x64)
RESCOMP = windres
TARGETDIR = ../../../../build/windows/gmake2/output/x64/Profile
TARGET = $(TARGETDIR)/wxBase64p.dll
OBJDIR = ../../../../build/windows/gmake2/intermediate/x64/Profile/wxBase
DEFINES += -DUNICODE -D_UNICODE -DEA_COMPILER_NO_RTTI -DNDEBUG -DSHIB_PROFILE -DWIN32 -D_WINDOWS -DWIN64 -DNOPCH -DWXBUILDING -DwxUSE_ZLIB_H_IN_PATH -D_CRT_SECURE_NO_DEPRECATE=1 -D_CRT_NON_CONFORMING_SWPRINTFS=1 -D_SCL_SECURE_NO_WARNINGS=1 -DXML_STATIC -DWXMAKINGDLL_BASE -D__WXMSW__ -DwxUSE_GUI=0 -DwxUSE_BASE=1
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -flto -ffast-math -O3 -g -Wall -Wextra
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -flto -ffast-math -O3 -g -Wall -Wextra -std=c++1z -fno-rtti
LIBS += ../../../../build/windows/gmake2/output/x64/Profile/Engine.lib ../../../../build/windows/gmake2/output/x64/Profile/Memory64p.lib ../../../../build/windows/gmake2/output/x64/Profile/zlib-ng.lib ../../../../build/windows/gmake2/output/x64/Profile/wxRegex.lib
LDDEPS += ../../../../build/windows/gmake2/output/x64/Profile/Engine.lib ../../../../build/windows/gmake2/output/x64/Profile/Memory64p.lib ../../../../build/windows/gmake2/output/x64/Profile/zlib-ng.lib ../../../../build/windows/gmake2/output/x64/Profile/wxRegex.lib
ALL_LDFLAGS += $(LDFLAGS) -L/usr/lib64 -m64 -flto -shared -Wl,--out-implib="../../../../build/windows/gmake2/output/x64/Profile/wxBase64p.lib"
define POSTBUILDCMDS
	@echo Running postbuild commands
	IF NOT EXIST ..\..\..\..\..\workingdir\bin (mkdir ..\..\..\..\..\workingdir\bin)
	IF EXIST ..\..\..\..\build\windows\gmake2\output\x64\Profile\wxBase64p.dll\ (xcopy /Q /E /Y /I ..\..\..\..\build\windows\gmake2\output\x64\Profile\wxBase64p.dll ..\..\..\..\..\workingdir\bin > nul) ELSE (xcopy /Q /Y /I ..\..\..\..\build\windows\gmake2\output\x64\Profile\wxBase64p.dll ..\..\..\..\..\workingdir\bin > nul)
endef
endif

ifeq ($(config),profile_clang_x64)
ifeq ($(origin CC), default)
  CC = clang
endif
ifeq ($(origin CXX), default)
  CXX = clang++
endif
ifeq ($(origin AR), default)
  AR = ar
endif
TARGETDIR = ../../../../build/windows/gmake2/output/x64/Profile_Clang
TARGET = $(TARGETDIR)/wxBase64p.dll
OBJDIR = ../../../../build/windows/gmake2/intermediate/x64/Profile_Clang/wxBase
DEFINES += -DUNICODE -D_UNICODE -DEA_COMPILER_NO_RTTI -DNDEBUG -DWIN32 -D_WINDOWS -DWIN64 -DNOPCH -DWXBUILDING -DwxUSE_ZLIB_H_IN_PATH -D_CRT_SECURE_NO_DEPRECATE=1 -D_CRT_NON_CONFORMING_SWPRINTFS=1 -D_SCL_SECURE_NO_WARNINGS=1 -DXML_STATIC -DWXMAKINGDLL_BASE -D__WXMSW__ -DwxUSE_GUI=0 -DwxUSE_BASE=1
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -flto -ffast-math -O3 -g -Wall -Wextra
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -flto -ffast-math -O3 -g -Wall -Wextra -std=c++1z -fno-rtti
LIBS += ../../../../build/windows/gmake2/output/x64/Profile_Clang/Engine.lib ../../../../build/windows/gmake2/output/x64/Profile_Clang/Memory64p.lib ../../../../build/windows/gmake2/output/x64/Profile_Clang/zlib-ng.lib ../../../../build/windows/gmake2/output/x64/Profile_Clang/wxRegex.lib
LDDEPS += ../../../../build/windows/gmake2/output/x64/Profile_Clang/Engine.lib ../../../../build/windows/gmake2/output/x64/Profile_Clang/Memory64p.lib ../../../../build/windows/gmake2/output/x64/Profile_Clang/zlib-ng.lib ../../../../build/windows/gmake2/output/x64/Profile_Clang/wxRegex.lib
ALL_LDFLAGS += $(LDFLAGS) -L/usr/lib64 -m64 -flto -shared -Wl,--out-implib="../../../../build/windows/gmake2/output/x64/Profile_Clang/wxBase64p.lib"
define POSTBUILDCMDS
	@echo Running postbuild commands
	IF NOT EXIST ..\..\..\..\..\workingdir\bin (mkdir ..\..\..\..\..\workingdir\bin)
	IF EXIST ..\..\..\..\build\windows\gmake2\output\x64\Profile_Clang\wxBase64p.dll\ (xcopy /Q /E /Y /I ..\..\..\..\build\windows\gmake2\output\x64\Profile_Clang\wxBase64p.dll ..\..\..\..\..\workingdir\bin > nul) ELSE (xcopy /Q /Y /I ..\..\..\..\build\windows\gmake2\output\x64\Profile_Clang\wxBase64p.dll ..\..\..\..\..\workingdir\bin > nul)
endef
endif

ifeq ($(config),optimized_debug_x64)
RESCOMP = windres
TARGETDIR = ../../../../build/windows/gmake2/output/x64/Optimized_Debug
TARGET = $(TARGETDIR)/wxBase64od.dll
OBJDIR = ../../../../build/windows/gmake2/intermediate/x64/Optimized_Debug/wxBase
DEFINES += -DUNICODE -D_UNICODE -DEA_COMPILER_NO_RTTI -D_DEBUG -DDEBUG -DWIN32 -D_WINDOWS -DWIN64 -DNOPCH -DWXBUILDING -DwxUSE_ZLIB_H_IN_PATH -D_CRT_SECURE_NO_DEPRECATE=1 -D_CRT_NON_CONFORMING_SWPRINTFS=1 -D_SCL_SECURE_NO_WARNINGS=1 -DXML_STATIC -DWXMAKINGDLL_BASE -D__WXMSW__ -DwxUSE_GUI=0 -DwxUSE_BASE=1
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -flto -ffast-math -O3 -g -Wall -Wextra
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -flto -ffast-math -O3 -g -Wall -Wextra -std=c++1z -fno-rtti
LIBS += ../../../../build/windows/gmake2/output/x64/Optimized_Debug/Engine.lib ../../../../build/windows/gmake2/output/x64/Optimized_Debug/Memory64od.lib ../../../../build/windows/gmake2/output/x64/Optimized_Debug/zlib-ng.lib ../../../../build/windows/gmake2/output/x64/Optimized_Debug/wxRegex.lib
LDDEPS += ../../../../build/windows/gmake2/output/x64/Optimized_Debug/Engine.lib ../../../../build/windows/gmake2/output/x64/Optimized_Debug/Memory64od.lib ../../../../build/windows/gmake2/output/x64/Optimized_Debug/zlib-ng.lib ../../../../build/windows/gmake2/output/x64/Optimized_Debug/wxRegex.lib
ALL_LDFLAGS += $(LDFLAGS) -L/usr/lib64 -m64 -flto -shared -Wl,--out-implib="../../../../build/windows/gmake2/output/x64/Optimized_Debug/wxBase64od.lib"
define POSTBUILDCMDS
	@echo Running postbuild commands
	IF NOT EXIST ..\..\..\..\..\workingdir\bin (mkdir ..\..\..\..\..\workingdir\bin)
	IF EXIST ..\..\..\..\build\windows\gmake2\output\x64\Optimized_Debug\wxBase64od.dll\ (xcopy /Q /E /Y /I ..\..\..\..\build\windows\gmake2\output\x64\Optimized_Debug\wxBase64od.dll ..\..\..\..\..\workingdir\bin > nul) ELSE (xcopy /Q /Y /I ..\..\..\..\build\windows\gmake2\output\x64\Optimized_Debug\wxBase64od.dll ..\..\..\..\..\workingdir\bin > nul)
endef
endif

ifeq ($(config),optimized_debug_clang_x64)
ifeq ($(origin CC), default)
  CC = clang
endif
ifeq ($(origin CXX), default)
  CXX = clang++
endif
ifeq ($(origin AR), default)
  AR = ar
endif
TARGETDIR = ../../../../build/windows/gmake2/output/x64/Optimized_Debug_Clang
TARGET = $(TARGETDIR)/wxBase64od.dll
OBJDIR = ../../../../build/windows/gmake2/intermediate/x64/Optimized_Debug_Clang/wxBase
DEFINES += -DUNICODE -D_UNICODE -DEA_COMPILER_NO_RTTI -D_DEBUG -DDEBUG -DWIN32 -D_WINDOWS -DWIN64 -DNOPCH -DWXBUILDING -DwxUSE_ZLIB_H_IN_PATH -D_CRT_SECURE_NO_DEPRECATE=1 -D_CRT_NON_CONFORMING_SWPRINTFS=1 -D_SCL_SECURE_NO_WARNINGS=1 -DXML_STATIC -DWXMAKINGDLL_BASE -D__WXMSW__ -DwxUSE_GUI=0 -DwxUSE_BASE=1
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -flto -ffast-math -O3 -g -Wall -Wextra
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -flto -ffast-math -O3 -g -Wall -Wextra -std=c++1z -fno-rtti
LIBS += ../../../../build/windows/gmake2/output/x64/Optimized_Debug_Clang/Engine.lib ../../../../build/windows/gmake2/output/x64/Optimized_Debug_Clang/Memory64od.lib ../../../../build/windows/gmake2/output/x64/Optimized_Debug_Clang/zlib-ng.lib ../../../../build/windows/gmake2/output/x64/Optimized_Debug_Clang/wxRegex.lib
LDDEPS += ../../../../build/windows/gmake2/output/x64/Optimized_Debug_Clang/Engine.lib ../../../../build/windows/gmake2/output/x64/Optimized_Debug_Clang/Memory64od.lib ../../../../build/windows/gmake2/output/x64/Optimized_Debug_Clang/zlib-ng.lib ../../../../build/windows/gmake2/output/x64/Optimized_Debug_Clang/wxRegex.lib
ALL_LDFLAGS += $(LDFLAGS) -L/usr/lib64 -m64 -flto -shared -Wl,--out-implib="../../../../build/windows/gmake2/output/x64/Optimized_Debug_Clang/wxBase64od.lib"
define POSTBUILDCMDS
	@echo Running postbuild commands
	IF NOT EXIST ..\..\..\..\..\workingdir\bin (mkdir ..\..\..\..\..\workingdir\bin)
	IF EXIST ..\..\..\..\build\windows\gmake2\output\x64\Optimized_Debug_Clang\wxBase64od.dll\ (xcopy /Q /E /Y /I ..\..\..\..\build\windows\gmake2\output\x64\Optimized_Debug_Clang\wxBase64od.dll ..\..\..\..\..\workingdir\bin > nul) ELSE (xcopy /Q /Y /I ..\..\..\..\build\windows\gmake2\output\x64\Optimized_Debug_Clang\wxBase64od.dll ..\..\..\..\..\workingdir\bin > nul)
endef
endif

# Per File Configurations
# #############################################


# File sets
# #############################################

OBJECTS :=

OBJECTS += $(OBJDIR)/any.o
OBJECTS += $(OBJDIR)/appbase.o
OBJECTS += $(OBJDIR)/arcall.o
OBJECTS += $(OBJDIR)/arcfind.o
OBJECTS += $(OBJDIR)/archive.o
OBJECTS += $(OBJDIR)/arrstr.o
OBJECTS += $(OBJDIR)/base64.o
OBJECTS += $(OBJDIR)/basemsw.o
OBJECTS += $(OBJDIR)/clntdata.o
OBJECTS += $(OBJDIR)/cmdline.o
OBJECTS += $(OBJDIR)/config.o
OBJECTS += $(OBJDIR)/convauto.o
OBJECTS += $(OBJDIR)/crashrpt.o
OBJECTS += $(OBJDIR)/datetime.o
OBJECTS += $(OBJDIR)/datetimefmt.o
OBJECTS += $(OBJDIR)/datstrm.o
OBJECTS += $(OBJDIR)/dde.o
OBJECTS += $(OBJDIR)/debughlp.o
OBJECTS += $(OBJDIR)/dir.o
OBJECTS += $(OBJDIR)/dircmn.o
OBJECTS += $(OBJDIR)/dlmsw.o
OBJECTS += $(OBJDIR)/dummy.o
OBJECTS += $(OBJDIR)/dynarray.o
OBJECTS += $(OBJDIR)/dynlib.o
OBJECTS += $(OBJDIR)/dynload.o
OBJECTS += $(OBJDIR)/encconv.o
OBJECTS += $(OBJDIR)/event.o
OBJECTS += $(OBJDIR)/evtloopcmn.o
OBJECTS += $(OBJDIR)/evtloopconsole.o
OBJECTS += $(OBJDIR)/extended.o
OBJECTS += $(OBJDIR)/ffile.o
OBJECTS += $(OBJDIR)/file.o
OBJECTS += $(OBJDIR)/fileback.o
OBJECTS += $(OBJDIR)/fileconf.o
OBJECTS += $(OBJDIR)/filefn.o
OBJECTS += $(OBJDIR)/filename.o
OBJECTS += $(OBJDIR)/filesys.o
OBJECTS += $(OBJDIR)/filtall.o
OBJECTS += $(OBJDIR)/filtfind.o
OBJECTS += $(OBJDIR)/fmapbase.o
OBJECTS += $(OBJDIR)/fs_arc.o
OBJECTS += $(OBJDIR)/fs_filter.o
OBJECTS += $(OBJDIR)/fs_mem.o
OBJECTS += $(OBJDIR)/fswatcher.o
OBJECTS += $(OBJDIR)/fswatchercmn.o
OBJECTS += $(OBJDIR)/fswatcherg.o
OBJECTS += $(OBJDIR)/hash.o
OBJECTS += $(OBJDIR)/hashmap.o
OBJECTS += $(OBJDIR)/init.o
OBJECTS += $(OBJDIR)/intl.o
OBJECTS += $(OBJDIR)/ipcbase.o
OBJECTS += $(OBJDIR)/languageinfo.o
OBJECTS += $(OBJDIR)/list.o
OBJECTS += $(OBJDIR)/log.o
OBJECTS += $(OBJDIR)/longlong.o
OBJECTS += $(OBJDIR)/main.o
OBJECTS += $(OBJDIR)/memory.o
OBJECTS += $(OBJDIR)/mimecmn.o
OBJECTS += $(OBJDIR)/mimetype.o
OBJECTS += $(OBJDIR)/module.o
OBJECTS += $(OBJDIR)/msgout.o
OBJECTS += $(OBJDIR)/mslu.o
OBJECTS += $(OBJDIR)/mstream.o
OBJECTS += $(OBJDIR)/numformatter.o
OBJECTS += $(OBJDIR)/object.o
OBJECTS += $(OBJDIR)/platinfo.o
OBJECTS += $(OBJDIR)/power.o
OBJECTS += $(OBJDIR)/powercmn.o
OBJECTS += $(OBJDIR)/process.o
OBJECTS += $(OBJDIR)/regconf.o
OBJECTS += $(OBJDIR)/regex.o
OBJECTS += $(OBJDIR)/registry.o
OBJECTS += $(OBJDIR)/snglinst.o
OBJECTS += $(OBJDIR)/sstream.o
OBJECTS += $(OBJDIR)/stackwalk.o
OBJECTS += $(OBJDIR)/stdpaths.o
OBJECTS += $(OBJDIR)/stdpbase.o
OBJECTS += $(OBJDIR)/stdstream.o
OBJECTS += $(OBJDIR)/stopwatch.o
OBJECTS += $(OBJDIR)/strconv.o
OBJECTS += $(OBJDIR)/stream.o
OBJECTS += $(OBJDIR)/string.o
OBJECTS += $(OBJDIR)/stringimpl.o
OBJECTS += $(OBJDIR)/stringops.o
OBJECTS += $(OBJDIR)/strvararg.o
OBJECTS += $(OBJDIR)/sysopt.o
OBJECTS += $(OBJDIR)/tarstrm.o
OBJECTS += $(OBJDIR)/textbuf.o
OBJECTS += $(OBJDIR)/textfile.o
OBJECTS += $(OBJDIR)/thread.o
OBJECTS += $(OBJDIR)/threadinfo.o
OBJECTS += $(OBJDIR)/time.o
OBJECTS += $(OBJDIR)/timer.o
OBJECTS += $(OBJDIR)/timercmn.o
OBJECTS += $(OBJDIR)/timerimpl.o
OBJECTS += $(OBJDIR)/tokenzr.o
OBJECTS += $(OBJDIR)/translation.o
OBJECTS += $(OBJDIR)/txtstrm.o
OBJECTS += $(OBJDIR)/unichar.o
OBJECTS += $(OBJDIR)/uri.o
OBJECTS += $(OBJDIR)/ustring.o
OBJECTS += $(OBJDIR)/utils.o
OBJECTS += $(OBJDIR)/utilscmn.o
OBJECTS += $(OBJDIR)/utilsexc.o
OBJECTS += $(OBJDIR)/variant.o
OBJECTS += $(OBJDIR)/volume.o
OBJECTS += $(OBJDIR)/wfstream.o
OBJECTS += $(OBJDIR)/wxcrt.o
OBJECTS += $(OBJDIR)/wxprintf.o
OBJECTS += $(OBJDIR)/xlocale.o
OBJECTS += $(OBJDIR)/xti.o
OBJECTS += $(OBJDIR)/xtistrm.o
OBJECTS += $(OBJDIR)/zipstrm.o
OBJECTS += $(OBJDIR)/zstream.o

# Rules
# #############################################

all: prebuild prelink $(TARGET) | $(TARGETDIR) $(OBJDIR)
	@:

$(TARGET): $(GCH) $(OBJECTS) $(LDDEPS) | $(TARGETDIR)
	@echo Linking wxBase
	$(SILENT) $(LINKCMD)
	$(POSTBUILDCMDS)

$(TARGETDIR):
	@echo Creating $(TARGETDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(TARGETDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(TARGETDIR))
endif

$(OBJDIR):
	@echo Creating $(OBJDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(OBJDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(OBJDIR))
endif

clean:
	@echo Cleaning wxBase
ifeq (posix,$(SHELLTYPE))
	$(SILENT) rm -f  $(TARGET)
	$(SILENT) rm -rf $(OBJDIR)
else
	$(SILENT) if exist $(subst /,\\,$(TARGET)) del $(subst /,\\,$(TARGET))
	$(SILENT) if exist $(subst /,\\,$(OBJDIR)) rmdir /s /q $(subst /,\\,$(OBJDIR))
endif

prebuild:
	$(PREBUILDCMDS)

prelink:
	$(PRELINKCMDS)

ifneq (,$(PCH))
$(OBJECTS): $(GCH) $(PCH) | $(OBJDIR) $(PCH_PLACEHOLDER)
$(GCH): $(PCH) | $(OBJDIR)
	@echo $(notdir $<)
	$(SILENT) $(CXX) -x c++-header $(ALL_CXXFLAGS) -o "$@" -MF "$(@:%.gch=%.d)" -c "$<"
$(PCH_PLACEHOLDER): $(GCH) | $(OBJDIR)
	$(SILENT) touch "$@"
else
$(OBJECTS): | $(OBJDIR)
endif


# File Rules
# #############################################

$(OBJDIR)/any.o: ../../../../../src/Dependencies/wxWidgets/src/common/any.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/appbase.o: ../../../../../src/Dependencies/wxWidgets/src/common/appbase.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/arcall.o: ../../../../../src/Dependencies/wxWidgets/src/common/arcall.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/arcfind.o: ../../../../../src/Dependencies/wxWidgets/src/common/arcfind.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/archive.o: ../../../../../src/Dependencies/wxWidgets/src/common/archive.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/arrstr.o: ../../../../../src/Dependencies/wxWidgets/src/common/arrstr.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/base64.o: ../../../../../src/Dependencies/wxWidgets/src/common/base64.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/clntdata.o: ../../../../../src/Dependencies/wxWidgets/src/common/clntdata.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/cmdline.o: ../../../../../src/Dependencies/wxWidgets/src/common/cmdline.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/config.o: ../../../../../src/Dependencies/wxWidgets/src/common/config.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/convauto.o: ../../../../../src/Dependencies/wxWidgets/src/common/convauto.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/datetime.o: ../../../../../src/Dependencies/wxWidgets/src/common/datetime.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/datetimefmt.o: ../../../../../src/Dependencies/wxWidgets/src/common/datetimefmt.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/datstrm.o: ../../../../../src/Dependencies/wxWidgets/src/common/datstrm.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/dircmn.o: ../../../../../src/Dependencies/wxWidgets/src/common/dircmn.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/dummy.o: ../../../../../src/Dependencies/wxWidgets/src/common/dummy.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/dynarray.o: ../../../../../src/Dependencies/wxWidgets/src/common/dynarray.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/dynlib.o: ../../../../../src/Dependencies/wxWidgets/src/common/dynlib.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/dynload.o: ../../../../../src/Dependencies/wxWidgets/src/common/dynload.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/encconv.o: ../../../../../src/Dependencies/wxWidgets/src/common/encconv.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/event.o: ../../../../../src/Dependencies/wxWidgets/src/common/event.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/evtloopcmn.o: ../../../../../src/Dependencies/wxWidgets/src/common/evtloopcmn.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/extended.o: ../../../../../src/Dependencies/wxWidgets/src/common/extended.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/ffile.o: ../../../../../src/Dependencies/wxWidgets/src/common/ffile.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/file.o: ../../../../../src/Dependencies/wxWidgets/src/common/file.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/fileback.o: ../../../../../src/Dependencies/wxWidgets/src/common/fileback.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/fileconf.o: ../../../../../src/Dependencies/wxWidgets/src/common/fileconf.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/filefn.o: ../../../../../src/Dependencies/wxWidgets/src/common/filefn.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/filename.o: ../../../../../src/Dependencies/wxWidgets/src/common/filename.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/filesys.o: ../../../../../src/Dependencies/wxWidgets/src/common/filesys.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/filtall.o: ../../../../../src/Dependencies/wxWidgets/src/common/filtall.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/filtfind.o: ../../../../../src/Dependencies/wxWidgets/src/common/filtfind.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/fmapbase.o: ../../../../../src/Dependencies/wxWidgets/src/common/fmapbase.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/fs_arc.o: ../../../../../src/Dependencies/wxWidgets/src/common/fs_arc.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/fs_filter.o: ../../../../../src/Dependencies/wxWidgets/src/common/fs_filter.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/fs_mem.o: ../../../../../src/Dependencies/wxWidgets/src/common/fs_mem.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/fswatchercmn.o: ../../../../../src/Dependencies/wxWidgets/src/common/fswatchercmn.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/hash.o: ../../../../../src/Dependencies/wxWidgets/src/common/hash.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/hashmap.o: ../../../../../src/Dependencies/wxWidgets/src/common/hashmap.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/init.o: ../../../../../src/Dependencies/wxWidgets/src/common/init.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/intl.o: ../../../../../src/Dependencies/wxWidgets/src/common/intl.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/ipcbase.o: ../../../../../src/Dependencies/wxWidgets/src/common/ipcbase.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/languageinfo.o: ../../../../../src/Dependencies/wxWidgets/src/common/languageinfo.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/list.o: ../../../../../src/Dependencies/wxWidgets/src/common/list.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/log.o: ../../../../../src/Dependencies/wxWidgets/src/common/log.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/longlong.o: ../../../../../src/Dependencies/wxWidgets/src/common/longlong.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/memory.o: ../../../../../src/Dependencies/wxWidgets/src/common/memory.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/mimecmn.o: ../../../../../src/Dependencies/wxWidgets/src/common/mimecmn.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/module.o: ../../../../../src/Dependencies/wxWidgets/src/common/module.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/msgout.o: ../../../../../src/Dependencies/wxWidgets/src/common/msgout.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/mstream.o: ../../../../../src/Dependencies/wxWidgets/src/common/mstream.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/numformatter.o: ../../../../../src/Dependencies/wxWidgets/src/common/numformatter.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/object.o: ../../../../../src/Dependencies/wxWidgets/src/common/object.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/platinfo.o: ../../../../../src/Dependencies/wxWidgets/src/common/platinfo.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/powercmn.o: ../../../../../src/Dependencies/wxWidgets/src/common/powercmn.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/process.o: ../../../../../src/Dependencies/wxWidgets/src/common/process.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/regex.o: ../../../../../src/Dependencies/wxWidgets/src/common/regex.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/sstream.o: ../../../../../src/Dependencies/wxWidgets/src/common/sstream.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/stdpbase.o: ../../../../../src/Dependencies/wxWidgets/src/common/stdpbase.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/stdstream.o: ../../../../../src/Dependencies/wxWidgets/src/common/stdstream.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/stopwatch.o: ../../../../../src/Dependencies/wxWidgets/src/common/stopwatch.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/strconv.o: ../../../../../src/Dependencies/wxWidgets/src/common/strconv.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/stream.o: ../../../../../src/Dependencies/wxWidgets/src/common/stream.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/string.o: ../../../../../src/Dependencies/wxWidgets/src/common/string.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/stringimpl.o: ../../../../../src/Dependencies/wxWidgets/src/common/stringimpl.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/stringops.o: ../../../../../src/Dependencies/wxWidgets/src/common/stringops.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/strvararg.o: ../../../../../src/Dependencies/wxWidgets/src/common/strvararg.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/sysopt.o: ../../../../../src/Dependencies/wxWidgets/src/common/sysopt.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/tarstrm.o: ../../../../../src/Dependencies/wxWidgets/src/common/tarstrm.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/textbuf.o: ../../../../../src/Dependencies/wxWidgets/src/common/textbuf.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/textfile.o: ../../../../../src/Dependencies/wxWidgets/src/common/textfile.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/threadinfo.o: ../../../../../src/Dependencies/wxWidgets/src/common/threadinfo.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/time.o: ../../../../../src/Dependencies/wxWidgets/src/common/time.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/timercmn.o: ../../../../../src/Dependencies/wxWidgets/src/common/timercmn.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/timerimpl.o: ../../../../../src/Dependencies/wxWidgets/src/common/timerimpl.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/tokenzr.o: ../../../../../src/Dependencies/wxWidgets/src/common/tokenzr.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/translation.o: ../../../../../src/Dependencies/wxWidgets/src/common/translation.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/txtstrm.o: ../../../../../src/Dependencies/wxWidgets/src/common/txtstrm.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/unichar.o: ../../../../../src/Dependencies/wxWidgets/src/common/unichar.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/uri.o: ../../../../../src/Dependencies/wxWidgets/src/common/uri.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/ustring.o: ../../../../../src/Dependencies/wxWidgets/src/common/ustring.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/utilscmn.o: ../../../../../src/Dependencies/wxWidgets/src/common/utilscmn.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/variant.o: ../../../../../src/Dependencies/wxWidgets/src/common/variant.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/wfstream.o: ../../../../../src/Dependencies/wxWidgets/src/common/wfstream.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/wxcrt.o: ../../../../../src/Dependencies/wxWidgets/src/common/wxcrt.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/wxprintf.o: ../../../../../src/Dependencies/wxWidgets/src/common/wxprintf.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/xlocale.o: ../../../../../src/Dependencies/wxWidgets/src/common/xlocale.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/xti.o: ../../../../../src/Dependencies/wxWidgets/src/common/xti.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/xtistrm.o: ../../../../../src/Dependencies/wxWidgets/src/common/xtistrm.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/zipstrm.o: ../../../../../src/Dependencies/wxWidgets/src/common/zipstrm.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/zstream.o: ../../../../../src/Dependencies/wxWidgets/src/common/zstream.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/fswatcherg.o: ../../../../../src/Dependencies/wxWidgets/src/generic/fswatcherg.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/basemsw.o: ../../../../../src/Dependencies/wxWidgets/src/msw/basemsw.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/crashrpt.o: ../../../../../src/Dependencies/wxWidgets/src/msw/crashrpt.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/dde.o: ../../../../../src/Dependencies/wxWidgets/src/msw/dde.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/debughlp.o: ../../../../../src/Dependencies/wxWidgets/src/msw/debughlp.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/dir.o: ../../../../../src/Dependencies/wxWidgets/src/msw/dir.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/dlmsw.o: ../../../../../src/Dependencies/wxWidgets/src/msw/dlmsw.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/evtloopconsole.o: ../../../../../src/Dependencies/wxWidgets/src/msw/evtloopconsole.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/fswatcher.o: ../../../../../src/Dependencies/wxWidgets/src/msw/fswatcher.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/main.o: ../../../../../src/Dependencies/wxWidgets/src/msw/main.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/mimetype.o: ../../../../../src/Dependencies/wxWidgets/src/msw/mimetype.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/mslu.o: ../../../../../src/Dependencies/wxWidgets/src/msw/mslu.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/power.o: ../../../../../src/Dependencies/wxWidgets/src/msw/power.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/regconf.o: ../../../../../src/Dependencies/wxWidgets/src/msw/regconf.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/registry.o: ../../../../../src/Dependencies/wxWidgets/src/msw/registry.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/snglinst.o: ../../../../../src/Dependencies/wxWidgets/src/msw/snglinst.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/stackwalk.o: ../../../../../src/Dependencies/wxWidgets/src/msw/stackwalk.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/stdpaths.o: ../../../../../src/Dependencies/wxWidgets/src/msw/stdpaths.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/thread.o: ../../../../../src/Dependencies/wxWidgets/src/msw/thread.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/timer.o: ../../../../../src/Dependencies/wxWidgets/src/msw/timer.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/utils.o: ../../../../../src/Dependencies/wxWidgets/src/msw/utils.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/utilsexc.o: ../../../../../src/Dependencies/wxWidgets/src/msw/utilsexc.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/volume.o: ../../../../../src/Dependencies/wxWidgets/src/msw/volume.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"

-include $(OBJECTS:%.o=%.d)
ifneq (,$(PCH))
  -include "$(PCH_PLACEHOLDER).d"
endif