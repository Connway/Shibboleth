# Alternative GNU Make project makefile autogenerated by Premake

ifndef config
  config=debug_x64
endif

ifndef verbose
  SILENT = @
endif

.PHONY: clean prebuild prelink

SHELLTYPE := msdos
ifeq (,$(ComSpec)$(COMSPEC))
  SHELLTYPE := posix
endif
ifeq (/bin,$(findstring /bin,$(SHELL)))
  SHELLTYPE := posix
endif

# Configurations
# #############################################

INCLUDES += -I../../../../../src/Dependencies/easy_profiler/easy_profiler_core/include
FORCE_INCLUDE +=
ALL_CPPFLAGS += $(CPPFLAGS) -MMD -MP $(DEFINES) $(INCLUDES)
ALL_RESFLAGS += $(RESFLAGS) $(DEFINES) $(INCLUDES)
LIBS +=
LDDEPS +=
LINKCMD = $(AR) -rcs "$@" $(OBJECTS)
define PREBUILDCMDS
endef
define PRELINKCMDS
endef
define POSTBUILDCMDS
endef

ifeq ($(config),debug_x64)
RESCOMP = windres
TARGETDIR = ../../../../build/windows/gmake2/output/x64/Debug
TARGET = $(TARGETDIR)/easy_profiler.lib
OBJDIR = ../../../../build/windows/gmake2/intermediate/x64/Debug/easy_profiler
DEFINES += -DUNICODE -D_UNICODE -DEA_COMPILER_NO_RTTI -D_DEBUG -DDEBUG -DWIN32 -D_WINDOWS -DWIN64 -DEASY_CHRONO_HIGHRES_CLOCK -DEASY_OPTION_STORAGE_EXPAND_BLOCKS_ON -DEASY_OPTION_IMPLICIT_THREAD_REGISTRATION -DEASY_OPTION_EVENT_TRACING_ENABLED -DEASY_OPTION_BUILTIN_COLORS -DEASY_PROFILER_STATIC -DEASY_DEFAULT_PORT=28077 -DEASY_PROFILER_VERSION_MAJOR=1 -DEASY_PROFILER_VERSION_MINOR=3 -DEASY_PROFILER_VERSION_PATCH=0
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -ffast-math -Og -g
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -ffast-math -Og -g -std=c++1z -fno-rtti
ALL_LDFLAGS += $(LDFLAGS) -L/usr/lib64 -m64
endif

ifeq ($(config),release_x64)
RESCOMP = windres
TARGETDIR = ../../../../build/windows/gmake2/output/x64/Release
TARGET = $(TARGETDIR)/easy_profiler.lib
OBJDIR = ../../../../build/windows/gmake2/intermediate/x64/Release/easy_profiler
DEFINES += -DUNICODE -D_UNICODE -DEA_COMPILER_NO_RTTI -DNDEBUG -DWIN32 -D_WINDOWS -DWIN64 -DEASY_CHRONO_HIGHRES_CLOCK -DEASY_OPTION_STORAGE_EXPAND_BLOCKS_ON -DEASY_OPTION_IMPLICIT_THREAD_REGISTRATION -DEASY_OPTION_EVENT_TRACING_ENABLED -DEASY_OPTION_BUILTIN_COLORS -DEASY_PROFILER_STATIC -DEASY_DEFAULT_PORT=28077 -DEASY_PROFILER_VERSION_MAJOR=1 -DEASY_PROFILER_VERSION_MINOR=3 -DEASY_PROFILER_VERSION_PATCH=0
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -flto -ffast-math -O3 -g
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -flto -ffast-math -O3 -g -std=c++1z -fno-rtti
ALL_LDFLAGS += $(LDFLAGS) -L/usr/lib64 -m64 -flto
endif

ifeq ($(config),debug_clang_x64)
ifeq ($(origin CC), default)
  CC = clang
endif
ifeq ($(origin CXX), default)
  CXX = clang++
endif
ifeq ($(origin AR), default)
  AR = ar
endif
TARGETDIR = ../../../../build/windows/gmake2/output/x64/Debug_Clang
TARGET = $(TARGETDIR)/easy_profiler.lib
OBJDIR = ../../../../build/windows/gmake2/intermediate/x64/Debug_Clang/easy_profiler
DEFINES += -DUNICODE -D_UNICODE -DEA_COMPILER_NO_RTTI -D_DEBUG -DDEBUG -DWIN32 -D_WINDOWS -DWIN64 -DEASY_CHRONO_HIGHRES_CLOCK -DEASY_OPTION_STORAGE_EXPAND_BLOCKS_ON -DEASY_OPTION_IMPLICIT_THREAD_REGISTRATION -DEASY_OPTION_EVENT_TRACING_ENABLED -DEASY_OPTION_BUILTIN_COLORS -DEASY_PROFILER_STATIC -DEASY_DEFAULT_PORT=28077 -DEASY_PROFILER_VERSION_MAJOR=1 -DEASY_PROFILER_VERSION_MINOR=3 -DEASY_PROFILER_VERSION_PATCH=0
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -ffast-math -O0 -g
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -ffast-math -O0 -g -std=c++1z -fno-rtti
ALL_LDFLAGS += $(LDFLAGS) -L/usr/lib64 -m64
endif

ifeq ($(config),release_clang_x64)
ifeq ($(origin CC), default)
  CC = clang
endif
ifeq ($(origin CXX), default)
  CXX = clang++
endif
ifeq ($(origin AR), default)
  AR = ar
endif
TARGETDIR = ../../../../build/windows/gmake2/output/x64/Release_Clang
TARGET = $(TARGETDIR)/easy_profiler.lib
OBJDIR = ../../../../build/windows/gmake2/intermediate/x64/Release_Clang/easy_profiler
DEFINES += -DUNICODE -D_UNICODE -DEA_COMPILER_NO_RTTI -DNDEBUG -DWIN32 -D_WINDOWS -DWIN64 -DEASY_CHRONO_HIGHRES_CLOCK -DEASY_OPTION_STORAGE_EXPAND_BLOCKS_ON -DEASY_OPTION_IMPLICIT_THREAD_REGISTRATION -DEASY_OPTION_EVENT_TRACING_ENABLED -DEASY_OPTION_BUILTIN_COLORS -DEASY_PROFILER_STATIC -DEASY_DEFAULT_PORT=28077 -DEASY_PROFILER_VERSION_MAJOR=1 -DEASY_PROFILER_VERSION_MINOR=3 -DEASY_PROFILER_VERSION_PATCH=0
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -flto -ffast-math -O3 -g
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -flto -ffast-math -O3 -g -std=c++1z -fno-rtti
ALL_LDFLAGS += $(LDFLAGS) -L/usr/lib64 -m64 -flto
endif

ifeq ($(config),profile_x64)
RESCOMP = windres
TARGETDIR = ../../../../build/windows/gmake2/output/x64/Profile
TARGET = $(TARGETDIR)/easy_profiler.lib
OBJDIR = ../../../../build/windows/gmake2/intermediate/x64/Profile/easy_profiler
DEFINES += -DUNICODE -D_UNICODE -DEA_COMPILER_NO_RTTI -DNDEBUG -DSHIB_PROFILE -DWIN32 -D_WINDOWS -DWIN64 -DEASY_CHRONO_HIGHRES_CLOCK -DEASY_OPTION_STORAGE_EXPAND_BLOCKS_ON -DEASY_OPTION_IMPLICIT_THREAD_REGISTRATION -DEASY_OPTION_EVENT_TRACING_ENABLED -DEASY_OPTION_BUILTIN_COLORS -DEASY_PROFILER_STATIC -DEASY_DEFAULT_PORT=28077 -DEASY_PROFILER_VERSION_MAJOR=1 -DEASY_PROFILER_VERSION_MINOR=3 -DEASY_PROFILER_VERSION_PATCH=0
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -flto -ffast-math -O3 -g
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -flto -ffast-math -O3 -g -std=c++1z -fno-rtti
ALL_LDFLAGS += $(LDFLAGS) -L/usr/lib64 -m64 -flto
endif

ifeq ($(config),profile_clang_x64)
ifeq ($(origin CC), default)
  CC = clang
endif
ifeq ($(origin CXX), default)
  CXX = clang++
endif
ifeq ($(origin AR), default)
  AR = ar
endif
TARGETDIR = ../../../../build/windows/gmake2/output/x64/Profile_Clang
TARGET = $(TARGETDIR)/easy_profiler.lib
OBJDIR = ../../../../build/windows/gmake2/intermediate/x64/Profile_Clang/easy_profiler
DEFINES += -DUNICODE -D_UNICODE -DEA_COMPILER_NO_RTTI -DNDEBUG -DWIN32 -D_WINDOWS -DWIN64 -DEASY_CHRONO_HIGHRES_CLOCK -DEASY_OPTION_STORAGE_EXPAND_BLOCKS_ON -DEASY_OPTION_IMPLICIT_THREAD_REGISTRATION -DEASY_OPTION_EVENT_TRACING_ENABLED -DEASY_OPTION_BUILTIN_COLORS -DEASY_PROFILER_STATIC -DEASY_DEFAULT_PORT=28077 -DEASY_PROFILER_VERSION_MAJOR=1 -DEASY_PROFILER_VERSION_MINOR=3 -DEASY_PROFILER_VERSION_PATCH=0
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -flto -ffast-math -O3 -g
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -flto -ffast-math -O3 -g -std=c++1z -fno-rtti
ALL_LDFLAGS += $(LDFLAGS) -L/usr/lib64 -m64 -flto
endif

ifeq ($(config),optimized_debug_x64)
RESCOMP = windres
TARGETDIR = ../../../../build/windows/gmake2/output/x64/Optimized_Debug
TARGET = $(TARGETDIR)/easy_profiler.lib
OBJDIR = ../../../../build/windows/gmake2/intermediate/x64/Optimized_Debug/easy_profiler
DEFINES += -DUNICODE -D_UNICODE -DEA_COMPILER_NO_RTTI -D_DEBUG -DDEBUG -DWIN32 -D_WINDOWS -DWIN64 -DEASY_CHRONO_HIGHRES_CLOCK -DEASY_OPTION_STORAGE_EXPAND_BLOCKS_ON -DEASY_OPTION_IMPLICIT_THREAD_REGISTRATION -DEASY_OPTION_EVENT_TRACING_ENABLED -DEASY_OPTION_BUILTIN_COLORS -DEASY_PROFILER_STATIC -DEASY_DEFAULT_PORT=28077 -DEASY_PROFILER_VERSION_MAJOR=1 -DEASY_PROFILER_VERSION_MINOR=3 -DEASY_PROFILER_VERSION_PATCH=0
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -flto -ffast-math -O3 -g
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -flto -ffast-math -O3 -g -std=c++1z -fno-rtti
ALL_LDFLAGS += $(LDFLAGS) -L/usr/lib64 -m64 -flto
endif

ifeq ($(config),optimized_debug_clang_x64)
ifeq ($(origin CC), default)
  CC = clang
endif
ifeq ($(origin CXX), default)
  CXX = clang++
endif
ifeq ($(origin AR), default)
  AR = ar
endif
TARGETDIR = ../../../../build/windows/gmake2/output/x64/Optimized_Debug_Clang
TARGET = $(TARGETDIR)/easy_profiler.lib
OBJDIR = ../../../../build/windows/gmake2/intermediate/x64/Optimized_Debug_Clang/easy_profiler
DEFINES += -DUNICODE -D_UNICODE -DEA_COMPILER_NO_RTTI -D_DEBUG -DDEBUG -DWIN32 -D_WINDOWS -DWIN64 -DEASY_CHRONO_HIGHRES_CLOCK -DEASY_OPTION_STORAGE_EXPAND_BLOCKS_ON -DEASY_OPTION_IMPLICIT_THREAD_REGISTRATION -DEASY_OPTION_EVENT_TRACING_ENABLED -DEASY_OPTION_BUILTIN_COLORS -DEASY_PROFILER_STATIC -DEASY_DEFAULT_PORT=28077 -DEASY_PROFILER_VERSION_MAJOR=1 -DEASY_PROFILER_VERSION_MINOR=3 -DEASY_PROFILER_VERSION_PATCH=0
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -flto -ffast-math -O3 -g
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -flto -ffast-math -O3 -g -std=c++1z -fno-rtti
ALL_LDFLAGS += $(LDFLAGS) -L/usr/lib64 -m64 -flto
endif

# Per File Configurations
# #############################################


# File sets
# #############################################

OBJECTS :=

OBJECTS += $(OBJDIR)/block.o
OBJECTS += $(OBJDIR)/easy_socket.o
OBJECTS += $(OBJDIR)/event_trace_win.o
OBJECTS += $(OBJDIR)/nonscoped_block.o
OBJECTS += $(OBJDIR)/profile_manager.o
OBJECTS += $(OBJDIR)/reader.o
OBJECTS += $(OBJDIR)/thread_storage.o

# Rules
# #############################################

all: prebuild prelink $(TARGET) | $(TARGETDIR) $(OBJDIR)
	@:

$(TARGET): $(GCH) $(OBJECTS) $(LDDEPS) | $(TARGETDIR)
	@echo Linking easy_profiler
	$(SILENT) $(LINKCMD)
	$(POSTBUILDCMDS)

$(TARGETDIR):
	@echo Creating $(TARGETDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(TARGETDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(TARGETDIR))
endif

$(OBJDIR):
	@echo Creating $(OBJDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(OBJDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(OBJDIR))
endif

clean:
	@echo Cleaning easy_profiler
ifeq (posix,$(SHELLTYPE))
	$(SILENT) rm -f  $(TARGET)
	$(SILENT) rm -rf $(OBJDIR)
else
	$(SILENT) if exist $(subst /,\\,$(TARGET)) del $(subst /,\\,$(TARGET))
	$(SILENT) if exist $(subst /,\\,$(OBJDIR)) rmdir /s /q $(subst /,\\,$(OBJDIR))
endif

prebuild:
	$(PREBUILDCMDS)

prelink:
	$(PRELINKCMDS)

ifneq (,$(PCH))
$(OBJECTS): $(GCH) $(PCH) | $(OBJDIR) $(PCH_PLACEHOLDER)
$(GCH): $(PCH) | $(OBJDIR)
	@echo $(notdir $<)
	$(SILENT) $(CXX) -x c++-header $(ALL_CXXFLAGS) -o "$@" -MF "$(@:%.gch=%.d)" -c "$<"
$(PCH_PLACEHOLDER): $(GCH) | $(OBJDIR)
	$(SILENT) touch "$@"
else
$(OBJECTS): | $(OBJDIR)
endif


# File Rules
# #############################################

$(OBJDIR)/block.o: ../../../../../src/Dependencies/easy_profiler/easy_profiler_core/block.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/easy_socket.o: ../../../../../src/Dependencies/easy_profiler/easy_profiler_core/easy_socket.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/event_trace_win.o: ../../../../../src/Dependencies/easy_profiler/easy_profiler_core/event_trace_win.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/nonscoped_block.o: ../../../../../src/Dependencies/easy_profiler/easy_profiler_core/nonscoped_block.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/profile_manager.o: ../../../../../src/Dependencies/easy_profiler/easy_profiler_core/profile_manager.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/reader.o: ../../../../../src/Dependencies/easy_profiler/easy_profiler_core/reader.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/thread_storage.o: ../../../../../src/Dependencies/easy_profiler/easy_profiler_core/thread_storage.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"

-include $(OBJECTS:%.o=%.d)
ifneq (,$(PCH))
  -include "$(PCH_PLACEHOLDER).d"
endif