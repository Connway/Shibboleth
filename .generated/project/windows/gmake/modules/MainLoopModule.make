# GNU Make project makefile autogenerated by Premake

ifndef config
  config=debug_x64
endif

ifndef verbose
  SILENT = @
endif

.PHONY: clean prebuild prelink

ifeq ($(config),debug_x64)
  RESCOMP = windres
  TARGETDIR = ../../../../build/windows/gmake/output/x64/Debug
  TARGET = $(TARGETDIR)/MainLoopModule64d.dll
  OBJDIR = ../../../../build/windows/gmake/intermediate/x64/Debug/MainLoopModule
  DEFINES += -DUNICODE -D_UNICODE -DEA_COMPILER_NO_RTTI -D_DEBUG -DDEBUG -DWIN32 -D_WINDOWS -DWIN64
  INCLUDES += -I../../../../../src/Dependencies/dirent -I../../../../../src/Modules/MainLoop/include -I../../../../../src/Engine/Engine/include -I../../../../../src/Engine/Memory/include -I../../../../../src/Frameworks/Gaff/include -I../../../../../src/Dependencies/EASTL/include
  FORCE_INCLUDE +=
  ALL_CPPFLAGS += $(CPPFLAGS) -MMD -MP $(DEFINES) $(INCLUDES)
  ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -Werror -ffast-math -Og -g -Wall -Wextra
  ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -Werror -ffast-math -Og -g -Wall -Wextra -std=c++1z -fno-rtti
  ALL_RESFLAGS += $(RESFLAGS) $(DEFINES) $(INCLUDES)
  LIBS += ../../../../build/windows/gmake/output/x64/Debug/MainLoop.lib ../../../../build/windows/gmake/output/x64/Debug/Engine.lib ../../../../build/windows/gmake/output/x64/Debug/Gaff.lib ../../../../build/windows/gmake/output/x64/Debug/Memory64d.lib ../../../../build/windows/gmake/output/x64/Debug/EASTL.lib -lws2_32.lib -liphlpapi.lib -lpsapi.lib -luserenv.lib
  LDDEPS += ../../../../build/windows/gmake/output/x64/Debug/MainLoop.lib ../../../../build/windows/gmake/output/x64/Debug/Engine.lib ../../../../build/windows/gmake/output/x64/Debug/Gaff.lib ../../../../build/windows/gmake/output/x64/Debug/Memory64d.lib ../../../../build/windows/gmake/output/x64/Debug/EASTL.lib
  ALL_LDFLAGS += $(LDFLAGS) -L/usr/lib64 -m64 -shared -Wl,--out-implib="../../../../build/windows/gmake/output/x64/Debug/MainLoopModule64d.lib"
  LINKCMD = $(CXX) -o "$@" $(OBJECTS) $(RESOURCES) $(ALL_LDFLAGS) $(LIBS)
  define PREBUILDCMDS
	@echo Generating Gen_ReflectionInit.h for module MainLoop!
	cd ../../../../../utils
	premake5 gen_module_header --module=MainLoop
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
	@echo Running postbuild commands
	IF NOT EXIST ..\..\..\..\..\workingdir\Modules (mkdir ..\..\..\..\..\workingdir\Modules)
	IF EXIST ..\..\..\..\build\windows\gmake\output\x64\Debug\MainLoopModule64d.dll\ (xcopy /Q /E /Y /I ..\..\..\..\build\windows\gmake\output\x64\Debug\MainLoopModule64d.dll ..\..\..\..\..\workingdir\Modules > nul) ELSE (xcopy /Q /Y /I ..\..\..\..\build\windows\gmake\output\x64\Debug\MainLoopModule64d.dll ..\..\..\..\..\workingdir\Modules > nul)
  endef
all: prebuild prelink $(TARGET)
	@:

endif

ifeq ($(config),release_x64)
  RESCOMP = windres
  TARGETDIR = ../../../../build/windows/gmake/output/x64/Release
  TARGET = $(TARGETDIR)/MainLoopModule64.dll
  OBJDIR = ../../../../build/windows/gmake/intermediate/x64/Release/MainLoopModule
  DEFINES += -DUNICODE -D_UNICODE -DEA_COMPILER_NO_RTTI -DNDEBUG -DWIN32 -D_WINDOWS -DWIN64
  INCLUDES += -I../../../../../src/Dependencies/dirent -I../../../../../src/Modules/MainLoop/include -I../../../../../src/Engine/Engine/include -I../../../../../src/Engine/Memory/include -I../../../../../src/Frameworks/Gaff/include -I../../../../../src/Dependencies/EASTL/include
  FORCE_INCLUDE +=
  ALL_CPPFLAGS += $(CPPFLAGS) -MMD -MP $(DEFINES) $(INCLUDES)
  ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -flto -Werror -ffast-math -O3 -g -Wall -Wextra
  ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -flto -Werror -ffast-math -O3 -g -Wall -Wextra -std=c++1z -fno-rtti
  ALL_RESFLAGS += $(RESFLAGS) $(DEFINES) $(INCLUDES)
  LIBS += ../../../../build/windows/gmake/output/x64/Release/MainLoop.lib ../../../../build/windows/gmake/output/x64/Release/Engine.lib ../../../../build/windows/gmake/output/x64/Release/Gaff.lib ../../../../build/windows/gmake/output/x64/Release/Memory64.lib ../../../../build/windows/gmake/output/x64/Release/EASTL.lib -lws2_32.lib -liphlpapi.lib -lpsapi.lib -luserenv.lib
  LDDEPS += ../../../../build/windows/gmake/output/x64/Release/MainLoop.lib ../../../../build/windows/gmake/output/x64/Release/Engine.lib ../../../../build/windows/gmake/output/x64/Release/Gaff.lib ../../../../build/windows/gmake/output/x64/Release/Memory64.lib ../../../../build/windows/gmake/output/x64/Release/EASTL.lib
  ALL_LDFLAGS += $(LDFLAGS) -L/usr/lib64 -m64 -flto -shared -Wl,--out-implib="../../../../build/windows/gmake/output/x64/Release/MainLoopModule64.lib"
  LINKCMD = $(CXX) -o "$@" $(OBJECTS) $(RESOURCES) $(ALL_LDFLAGS) $(LIBS)
  define PREBUILDCMDS
	@echo Generating Gen_ReflectionInit.h for module MainLoop!
	cd ../../../../../utils
	premake5 gen_module_header --module=MainLoop
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
	@echo Running postbuild commands
	IF NOT EXIST ..\..\..\..\..\workingdir\Modules (mkdir ..\..\..\..\..\workingdir\Modules)
	IF EXIST ..\..\..\..\build\windows\gmake\output\x64\Release\MainLoopModule64.dll\ (xcopy /Q /E /Y /I ..\..\..\..\build\windows\gmake\output\x64\Release\MainLoopModule64.dll ..\..\..\..\..\workingdir\Modules > nul) ELSE (xcopy /Q /Y /I ..\..\..\..\build\windows\gmake\output\x64\Release\MainLoopModule64.dll ..\..\..\..\..\workingdir\Modules > nul)
  endef
all: prebuild prelink $(TARGET)
	@:

endif

ifeq ($(config),debug_clang_x64)
  ifeq ($(origin CC), default)
    CC = clang
  endif
  ifeq ($(origin CXX), default)
    CXX = clang++
  endif
  ifeq ($(origin AR), default)
    AR = ar
  endif
  TARGETDIR = ../../../../build/windows/gmake/output/x64/Debug_Clang
  TARGET = $(TARGETDIR)/MainLoopModule64d.dll
  OBJDIR = ../../../../build/windows/gmake/intermediate/x64/Debug_Clang/MainLoopModule
  DEFINES += -DUNICODE -D_UNICODE -DEA_COMPILER_NO_RTTI -D_DEBUG -DDEBUG -DWIN32 -D_WINDOWS -DWIN64
  INCLUDES += -I../../../../../src/Dependencies/dirent -I../../../../../src/Modules/MainLoop/include -I../../../../../src/Engine/Engine/include -I../../../../../src/Engine/Memory/include -I../../../../../src/Frameworks/Gaff/include -I../../../../../src/Dependencies/EASTL/include
  FORCE_INCLUDE +=
  ALL_CPPFLAGS += $(CPPFLAGS) -MMD -MP $(DEFINES) $(INCLUDES)
  ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -Werror -ffast-math -O0 -g -Wall -Wextra
  ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -Werror -ffast-math -O0 -g -Wall -Wextra -std=c++1z -fno-rtti
  ALL_RESFLAGS += $(RESFLAGS) $(DEFINES) $(INCLUDES)
  LIBS += ../../../../build/windows/gmake/output/x64/Debug_Clang/MainLoop.lib ../../../../build/windows/gmake/output/x64/Debug_Clang/Engine.lib ../../../../build/windows/gmake/output/x64/Debug_Clang/Gaff.lib ../../../../build/windows/gmake/output/x64/Debug_Clang/Memory64d.lib ../../../../build/windows/gmake/output/x64/Debug_Clang/EASTL.lib -lws2_32.lib -liphlpapi.lib -lpsapi.lib -luserenv.lib
  LDDEPS += ../../../../build/windows/gmake/output/x64/Debug_Clang/MainLoop.lib ../../../../build/windows/gmake/output/x64/Debug_Clang/Engine.lib ../../../../build/windows/gmake/output/x64/Debug_Clang/Gaff.lib ../../../../build/windows/gmake/output/x64/Debug_Clang/Memory64d.lib ../../../../build/windows/gmake/output/x64/Debug_Clang/EASTL.lib
  ALL_LDFLAGS += $(LDFLAGS) -L/usr/lib64 -m64 -shared -Wl,--out-implib="../../../../build/windows/gmake/output/x64/Debug_Clang/MainLoopModule64d.lib"
  LINKCMD = $(CXX) -o "$@" $(OBJECTS) $(RESOURCES) $(ALL_LDFLAGS) $(LIBS)
  define PREBUILDCMDS
	@echo Generating Gen_ReflectionInit.h for module MainLoop!
	cd ../../../../../utils
	premake5 gen_module_header --module=MainLoop
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
	@echo Running postbuild commands
	IF NOT EXIST ..\..\..\..\..\workingdir\Modules (mkdir ..\..\..\..\..\workingdir\Modules)
	IF EXIST ..\..\..\..\build\windows\gmake\output\x64\Debug_Clang\MainLoopModule64d.dll\ (xcopy /Q /E /Y /I ..\..\..\..\build\windows\gmake\output\x64\Debug_Clang\MainLoopModule64d.dll ..\..\..\..\..\workingdir\Modules > nul) ELSE (xcopy /Q /Y /I ..\..\..\..\build\windows\gmake\output\x64\Debug_Clang\MainLoopModule64d.dll ..\..\..\..\..\workingdir\Modules > nul)
  endef
all: prebuild prelink $(TARGET)
	@:

endif

ifeq ($(config),release_clang_x64)
  ifeq ($(origin CC), default)
    CC = clang
  endif
  ifeq ($(origin CXX), default)
    CXX = clang++
  endif
  ifeq ($(origin AR), default)
    AR = ar
  endif
  TARGETDIR = ../../../../build/windows/gmake/output/x64/Release_Clang
  TARGET = $(TARGETDIR)/MainLoopModule64.dll
  OBJDIR = ../../../../build/windows/gmake/intermediate/x64/Release_Clang/MainLoopModule
  DEFINES += -DUNICODE -D_UNICODE -DEA_COMPILER_NO_RTTI -DNDEBUG -DWIN32 -D_WINDOWS -DWIN64
  INCLUDES += -I../../../../../src/Dependencies/dirent -I../../../../../src/Modules/MainLoop/include -I../../../../../src/Engine/Engine/include -I../../../../../src/Engine/Memory/include -I../../../../../src/Frameworks/Gaff/include -I../../../../../src/Dependencies/EASTL/include
  FORCE_INCLUDE +=
  ALL_CPPFLAGS += $(CPPFLAGS) -MMD -MP $(DEFINES) $(INCLUDES)
  ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -flto -Werror -ffast-math -O3 -g -Wall -Wextra
  ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -flto -Werror -ffast-math -O3 -g -Wall -Wextra -std=c++1z -fno-rtti
  ALL_RESFLAGS += $(RESFLAGS) $(DEFINES) $(INCLUDES)
  LIBS += ../../../../build/windows/gmake/output/x64/Release_Clang/MainLoop.lib ../../../../build/windows/gmake/output/x64/Release_Clang/Engine.lib ../../../../build/windows/gmake/output/x64/Release_Clang/Gaff.lib ../../../../build/windows/gmake/output/x64/Release_Clang/Memory64.lib ../../../../build/windows/gmake/output/x64/Release_Clang/EASTL.lib -lws2_32.lib -liphlpapi.lib -lpsapi.lib -luserenv.lib
  LDDEPS += ../../../../build/windows/gmake/output/x64/Release_Clang/MainLoop.lib ../../../../build/windows/gmake/output/x64/Release_Clang/Engine.lib ../../../../build/windows/gmake/output/x64/Release_Clang/Gaff.lib ../../../../build/windows/gmake/output/x64/Release_Clang/Memory64.lib ../../../../build/windows/gmake/output/x64/Release_Clang/EASTL.lib
  ALL_LDFLAGS += $(LDFLAGS) -L/usr/lib64 -m64 -flto -shared -Wl,--out-implib="../../../../build/windows/gmake/output/x64/Release_Clang/MainLoopModule64.lib"
  LINKCMD = $(CXX) -o "$@" $(OBJECTS) $(RESOURCES) $(ALL_LDFLAGS) $(LIBS)
  define PREBUILDCMDS
	@echo Generating Gen_ReflectionInit.h for module MainLoop!
	cd ../../../../../utils
	premake5 gen_module_header --module=MainLoop
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
	@echo Running postbuild commands
	IF NOT EXIST ..\..\..\..\..\workingdir\Modules (mkdir ..\..\..\..\..\workingdir\Modules)
	IF EXIST ..\..\..\..\build\windows\gmake\output\x64\Release_Clang\MainLoopModule64.dll\ (xcopy /Q /E /Y /I ..\..\..\..\build\windows\gmake\output\x64\Release_Clang\MainLoopModule64.dll ..\..\..\..\..\workingdir\Modules > nul) ELSE (xcopy /Q /Y /I ..\..\..\..\build\windows\gmake\output\x64\Release_Clang\MainLoopModule64.dll ..\..\..\..\..\workingdir\Modules > nul)
  endef
all: prebuild prelink $(TARGET)
	@:

endif

ifeq ($(config),profile_x64)
  RESCOMP = windres
  TARGETDIR = ../../../../build/windows/gmake/output/x64/Profile
  TARGET = $(TARGETDIR)/MainLoopModule64p.dll
  OBJDIR = ../../../../build/windows/gmake/intermediate/x64/Profile/MainLoopModule
  DEFINES += -DUNICODE -D_UNICODE -DEA_COMPILER_NO_RTTI -DNDEBUG -DSHIB_PROFILE -DWIN32 -D_WINDOWS -DWIN64
  INCLUDES += -I../../../../../src/Dependencies/dirent -I../../../../../src/Modules/MainLoop/include -I../../../../../src/Engine/Engine/include -I../../../../../src/Engine/Memory/include -I../../../../../src/Frameworks/Gaff/include -I../../../../../src/Dependencies/EASTL/include
  FORCE_INCLUDE +=
  ALL_CPPFLAGS += $(CPPFLAGS) -MMD -MP $(DEFINES) $(INCLUDES)
  ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -flto -Werror -ffast-math -O3 -g -Wall -Wextra
  ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -flto -Werror -ffast-math -O3 -g -Wall -Wextra -std=c++1z -fno-rtti
  ALL_RESFLAGS += $(RESFLAGS) $(DEFINES) $(INCLUDES)
  LIBS += ../../../../build/windows/gmake/output/x64/Profile/MainLoop.lib ../../../../build/windows/gmake/output/x64/Profile/Engine.lib ../../../../build/windows/gmake/output/x64/Profile/Gaff.lib ../../../../build/windows/gmake/output/x64/Profile/Memory64p.lib ../../../../build/windows/gmake/output/x64/Profile/EASTL.lib -lws2_32.lib -liphlpapi.lib -lpsapi.lib -luserenv.lib
  LDDEPS += ../../../../build/windows/gmake/output/x64/Profile/MainLoop.lib ../../../../build/windows/gmake/output/x64/Profile/Engine.lib ../../../../build/windows/gmake/output/x64/Profile/Gaff.lib ../../../../build/windows/gmake/output/x64/Profile/Memory64p.lib ../../../../build/windows/gmake/output/x64/Profile/EASTL.lib
  ALL_LDFLAGS += $(LDFLAGS) -L/usr/lib64 -m64 -flto -shared -Wl,--out-implib="../../../../build/windows/gmake/output/x64/Profile/MainLoopModule64p.lib"
  LINKCMD = $(CXX) -o "$@" $(OBJECTS) $(RESOURCES) $(ALL_LDFLAGS) $(LIBS)
  define PREBUILDCMDS
	@echo Generating Gen_ReflectionInit.h for module MainLoop!
	cd ../../../../../utils
	premake5 gen_module_header --module=MainLoop
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
	@echo Running postbuild commands
	IF NOT EXIST ..\..\..\..\..\workingdir\Modules (mkdir ..\..\..\..\..\workingdir\Modules)
	IF EXIST ..\..\..\..\build\windows\gmake\output\x64\Profile\MainLoopModule64p.dll\ (xcopy /Q /E /Y /I ..\..\..\..\build\windows\gmake\output\x64\Profile\MainLoopModule64p.dll ..\..\..\..\..\workingdir\Modules > nul) ELSE (xcopy /Q /Y /I ..\..\..\..\build\windows\gmake\output\x64\Profile\MainLoopModule64p.dll ..\..\..\..\..\workingdir\Modules > nul)
  endef
all: prebuild prelink $(TARGET)
	@:

endif

ifeq ($(config),profile_clang_x64)
  ifeq ($(origin CC), default)
    CC = clang
  endif
  ifeq ($(origin CXX), default)
    CXX = clang++
  endif
  ifeq ($(origin AR), default)
    AR = ar
  endif
  TARGETDIR = ../../../../build/windows/gmake/output/x64/Profile_Clang
  TARGET = $(TARGETDIR)/MainLoopModule64p.dll
  OBJDIR = ../../../../build/windows/gmake/intermediate/x64/Profile_Clang/MainLoopModule
  DEFINES += -DUNICODE -D_UNICODE -DEA_COMPILER_NO_RTTI -DNDEBUG -DWIN32 -D_WINDOWS -DWIN64
  INCLUDES += -I../../../../../src/Dependencies/dirent -I../../../../../src/Modules/MainLoop/include -I../../../../../src/Engine/Engine/include -I../../../../../src/Engine/Memory/include -I../../../../../src/Frameworks/Gaff/include -I../../../../../src/Dependencies/EASTL/include
  FORCE_INCLUDE +=
  ALL_CPPFLAGS += $(CPPFLAGS) -MMD -MP $(DEFINES) $(INCLUDES)
  ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -flto -Werror -ffast-math -O3 -g -Wall -Wextra
  ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -flto -Werror -ffast-math -O3 -g -Wall -Wextra -std=c++1z -fno-rtti
  ALL_RESFLAGS += $(RESFLAGS) $(DEFINES) $(INCLUDES)
  LIBS += ../../../../build/windows/gmake/output/x64/Profile_Clang/MainLoop.lib ../../../../build/windows/gmake/output/x64/Profile_Clang/Engine.lib ../../../../build/windows/gmake/output/x64/Profile_Clang/Gaff.lib ../../../../build/windows/gmake/output/x64/Profile_Clang/Memory64p.lib ../../../../build/windows/gmake/output/x64/Profile_Clang/EASTL.lib -lws2_32.lib -liphlpapi.lib -lpsapi.lib -luserenv.lib
  LDDEPS += ../../../../build/windows/gmake/output/x64/Profile_Clang/MainLoop.lib ../../../../build/windows/gmake/output/x64/Profile_Clang/Engine.lib ../../../../build/windows/gmake/output/x64/Profile_Clang/Gaff.lib ../../../../build/windows/gmake/output/x64/Profile_Clang/Memory64p.lib ../../../../build/windows/gmake/output/x64/Profile_Clang/EASTL.lib
  ALL_LDFLAGS += $(LDFLAGS) -L/usr/lib64 -m64 -flto -shared -Wl,--out-implib="../../../../build/windows/gmake/output/x64/Profile_Clang/MainLoopModule64p.lib"
  LINKCMD = $(CXX) -o "$@" $(OBJECTS) $(RESOURCES) $(ALL_LDFLAGS) $(LIBS)
  define PREBUILDCMDS
	@echo Generating Gen_ReflectionInit.h for module MainLoop!
	cd ../../../../../utils
	premake5 gen_module_header --module=MainLoop
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
	@echo Running postbuild commands
	IF NOT EXIST ..\..\..\..\..\workingdir\Modules (mkdir ..\..\..\..\..\workingdir\Modules)
	IF EXIST ..\..\..\..\build\windows\gmake\output\x64\Profile_Clang\MainLoopModule64p.dll\ (xcopy /Q /E /Y /I ..\..\..\..\build\windows\gmake\output\x64\Profile_Clang\MainLoopModule64p.dll ..\..\..\..\..\workingdir\Modules > nul) ELSE (xcopy /Q /Y /I ..\..\..\..\build\windows\gmake\output\x64\Profile_Clang\MainLoopModule64p.dll ..\..\..\..\..\workingdir\Modules > nul)
  endef
all: prebuild prelink $(TARGET)
	@:

endif

ifeq ($(config),optimized_debug_x64)
  RESCOMP = windres
  TARGETDIR = ../../../../build/windows/gmake/output/x64/Optimized_Debug
  TARGET = $(TARGETDIR)/MainLoopModule64od.dll
  OBJDIR = ../../../../build/windows/gmake/intermediate/x64/Optimized_Debug/MainLoopModule
  DEFINES += -DUNICODE -D_UNICODE -DEA_COMPILER_NO_RTTI -D_DEBUG -DDEBUG -DWIN32 -D_WINDOWS -DWIN64
  INCLUDES += -I../../../../../src/Dependencies/dirent -I../../../../../src/Modules/MainLoop/include -I../../../../../src/Engine/Engine/include -I../../../../../src/Engine/Memory/include -I../../../../../src/Frameworks/Gaff/include -I../../../../../src/Dependencies/EASTL/include
  FORCE_INCLUDE +=
  ALL_CPPFLAGS += $(CPPFLAGS) -MMD -MP $(DEFINES) $(INCLUDES)
  ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -flto -Werror -ffast-math -O3 -g -Wall -Wextra
  ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -flto -Werror -ffast-math -O3 -g -Wall -Wextra -std=c++1z -fno-rtti
  ALL_RESFLAGS += $(RESFLAGS) $(DEFINES) $(INCLUDES)
  LIBS += ../../../../build/windows/gmake/output/x64/Optimized_Debug/MainLoop.lib ../../../../build/windows/gmake/output/x64/Optimized_Debug/Engine.lib ../../../../build/windows/gmake/output/x64/Optimized_Debug/Gaff.lib ../../../../build/windows/gmake/output/x64/Optimized_Debug/Memory64od.lib ../../../../build/windows/gmake/output/x64/Optimized_Debug/EASTL.lib -lws2_32.lib -liphlpapi.lib -lpsapi.lib -luserenv.lib
  LDDEPS += ../../../../build/windows/gmake/output/x64/Optimized_Debug/MainLoop.lib ../../../../build/windows/gmake/output/x64/Optimized_Debug/Engine.lib ../../../../build/windows/gmake/output/x64/Optimized_Debug/Gaff.lib ../../../../build/windows/gmake/output/x64/Optimized_Debug/Memory64od.lib ../../../../build/windows/gmake/output/x64/Optimized_Debug/EASTL.lib
  ALL_LDFLAGS += $(LDFLAGS) -L/usr/lib64 -m64 -flto -shared -Wl,--out-implib="../../../../build/windows/gmake/output/x64/Optimized_Debug/MainLoopModule64od.lib"
  LINKCMD = $(CXX) -o "$@" $(OBJECTS) $(RESOURCES) $(ALL_LDFLAGS) $(LIBS)
  define PREBUILDCMDS
	@echo Generating Gen_ReflectionInit.h for module MainLoop!
	cd ../../../../../utils
	premake5 gen_module_header --module=MainLoop
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
	@echo Running postbuild commands
	IF NOT EXIST ..\..\..\..\..\workingdir\Modules (mkdir ..\..\..\..\..\workingdir\Modules)
	IF EXIST ..\..\..\..\build\windows\gmake\output\x64\Optimized_Debug\MainLoopModule64od.dll\ (xcopy /Q /E /Y /I ..\..\..\..\build\windows\gmake\output\x64\Optimized_Debug\MainLoopModule64od.dll ..\..\..\..\..\workingdir\Modules > nul) ELSE (xcopy /Q /Y /I ..\..\..\..\build\windows\gmake\output\x64\Optimized_Debug\MainLoopModule64od.dll ..\..\..\..\..\workingdir\Modules > nul)
  endef
all: prebuild prelink $(TARGET)
	@:

endif

ifeq ($(config),optimized_debug_clang_x64)
  ifeq ($(origin CC), default)
    CC = clang
  endif
  ifeq ($(origin CXX), default)
    CXX = clang++
  endif
  ifeq ($(origin AR), default)
    AR = ar
  endif
  TARGETDIR = ../../../../build/windows/gmake/output/x64/Optimized_Debug_Clang
  TARGET = $(TARGETDIR)/MainLoopModule64od.dll
  OBJDIR = ../../../../build/windows/gmake/intermediate/x64/Optimized_Debug_Clang/MainLoopModule
  DEFINES += -DUNICODE -D_UNICODE -DEA_COMPILER_NO_RTTI -D_DEBUG -DDEBUG -DWIN32 -D_WINDOWS -DWIN64
  INCLUDES += -I../../../../../src/Dependencies/dirent -I../../../../../src/Modules/MainLoop/include -I../../../../../src/Engine/Engine/include -I../../../../../src/Engine/Memory/include -I../../../../../src/Frameworks/Gaff/include -I../../../../../src/Dependencies/EASTL/include
  FORCE_INCLUDE +=
  ALL_CPPFLAGS += $(CPPFLAGS) -MMD -MP $(DEFINES) $(INCLUDES)
  ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -flto -Werror -ffast-math -O3 -g -Wall -Wextra
  ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -flto -Werror -ffast-math -O3 -g -Wall -Wextra -std=c++1z -fno-rtti
  ALL_RESFLAGS += $(RESFLAGS) $(DEFINES) $(INCLUDES)
  LIBS += ../../../../build/windows/gmake/output/x64/Optimized_Debug_Clang/MainLoop.lib ../../../../build/windows/gmake/output/x64/Optimized_Debug_Clang/Engine.lib ../../../../build/windows/gmake/output/x64/Optimized_Debug_Clang/Gaff.lib ../../../../build/windows/gmake/output/x64/Optimized_Debug_Clang/Memory64od.lib ../../../../build/windows/gmake/output/x64/Optimized_Debug_Clang/EASTL.lib -lws2_32.lib -liphlpapi.lib -lpsapi.lib -luserenv.lib
  LDDEPS += ../../../../build/windows/gmake/output/x64/Optimized_Debug_Clang/MainLoop.lib ../../../../build/windows/gmake/output/x64/Optimized_Debug_Clang/Engine.lib ../../../../build/windows/gmake/output/x64/Optimized_Debug_Clang/Gaff.lib ../../../../build/windows/gmake/output/x64/Optimized_Debug_Clang/Memory64od.lib ../../../../build/windows/gmake/output/x64/Optimized_Debug_Clang/EASTL.lib
  ALL_LDFLAGS += $(LDFLAGS) -L/usr/lib64 -m64 -flto -shared -Wl,--out-implib="../../../../build/windows/gmake/output/x64/Optimized_Debug_Clang/MainLoopModule64od.lib"
  LINKCMD = $(CXX) -o "$@" $(OBJECTS) $(RESOURCES) $(ALL_LDFLAGS) $(LIBS)
  define PREBUILDCMDS
	@echo Generating Gen_ReflectionInit.h for module MainLoop!
	cd ../../../../../utils
	premake5 gen_module_header --module=MainLoop
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
	@echo Running postbuild commands
	IF NOT EXIST ..\..\..\..\..\workingdir\Modules (mkdir ..\..\..\..\..\workingdir\Modules)
	IF EXIST ..\..\..\..\build\windows\gmake\output\x64\Optimized_Debug_Clang\MainLoopModule64od.dll\ (xcopy /Q /E /Y /I ..\..\..\..\build\windows\gmake\output\x64\Optimized_Debug_Clang\MainLoopModule64od.dll ..\..\..\..\..\workingdir\Modules > nul) ELSE (xcopy /Q /Y /I ..\..\..\..\build\windows\gmake\output\x64\Optimized_Debug_Clang\MainLoopModule64od.dll ..\..\..\..\..\workingdir\Modules > nul)
  endef
all: prebuild prelink $(TARGET)
	@:

endif

OBJECTS := \
	$(OBJDIR)/Shibboleth_MainLoopModule.o \

RESOURCES := \

CUSTOMFILES := \

SHELLTYPE := msdos
ifeq (,$(ComSpec)$(COMSPEC))
  SHELLTYPE := posix
endif
ifeq (/bin,$(findstring /bin,$(SHELL)))
  SHELLTYPE := posix
endif

$(TARGET): $(GCH) ${CUSTOMFILES} $(OBJECTS) $(LDDEPS) $(RESOURCES)
	@echo Linking MainLoopModule
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(TARGETDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(TARGETDIR))
endif
	$(SILENT) $(LINKCMD)
	$(POSTBUILDCMDS)

clean:
	@echo Cleaning MainLoopModule
ifeq (posix,$(SHELLTYPE))
	$(SILENT) rm -f  $(TARGET)
	$(SILENT) rm -rf $(OBJDIR)
else
	$(SILENT) if exist $(subst /,\\,$(TARGET)) del $(subst /,\\,$(TARGET))
	$(SILENT) if exist $(subst /,\\,$(OBJDIR)) rmdir /s /q $(subst /,\\,$(OBJDIR))
endif

prebuild:
	$(PREBUILDCMDS)

prelink:
	$(PRELINKCMDS)

ifneq (,$(PCH))
$(OBJECTS): $(GCH) $(PCH)
$(GCH): $(PCH)
	@echo $(notdir $<)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(OBJDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(OBJDIR))
endif
	$(SILENT) $(CXX) -x c++-header $(ALL_CXXFLAGS) -o "$@" -MF "$(@:%.gch=%.d)" -c "$<"
endif

$(OBJDIR)/Shibboleth_MainLoopModule.o: ../../../../../src/Modules/MainLoop/Shibboleth_MainLoopModule.cpp
	@echo $(notdir $<)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(OBJDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(OBJDIR))
endif
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"

-include $(OBJECTS:%.o=%.d)
ifneq (,$(PCH))
  -include $(OBJDIR)/$(notdir $(PCH)).d
endif