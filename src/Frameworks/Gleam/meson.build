header_files = [
  'include/Direct3D11/Gleam_BlendState_Direct3D11.h',
  'include/Direct3D11/Gleam_Buffer_Direct3D11.h',
  'include/Direct3D11/Gleam_CommandList_Direct3D11.h',
  'include/Direct3D11/Gleam_DepthStencilState_Direct3D11.h',
  'include/Direct3D11/Gleam_IncludeD3D11.h',
  'include/Direct3D11/Gleam_Layout_Direct3D11.h',
  'include/Direct3D11/Gleam_Mesh_Direct3D11.h',
  'include/Direct3D11/Gleam_ProgramBuffers_Direct3D11.h',
  'include/Direct3D11/Gleam_Program_Direct3D11.h',
  'include/Direct3D11/Gleam_RasterState_Direct3D11.h',
  'include/Direct3D11/Gleam_RenderDevice_Direct3D11.h',
  'include/Direct3D11/Gleam_RenderOutput_Direct3D11.h',
  'include/Direct3D11/Gleam_RenderTarget_Direct3D11.h',
  'include/Direct3D11/Gleam_SamplerState_Direct3D11.h',
  'include/Direct3D11/Gleam_ShaderResourceView_Direct3D11.h',
  'include/Direct3D11/Gleam_Shader_Direct3D11.h',
  'include/Direct3D11/Gleam_Texture_Direct3D11.h',
  'include/Gleam_AABB.h',
  'include/Gleam_BitVector.h',
  'include/Gleam_BlendState.h',
  'include/Gleam_Buffer.h',
  'include/Gleam_Color.h',
  'include/Gleam_CommandList.h',
  'include/Gleam_Defines.h',
  'include/Gleam_DepthStencilState.h',
  'include/Gleam_Frustum.h',
  'include/Gleam_Global.h',
  'include/Gleam_IBlendState.h',
  'include/Gleam_IBuffer.h',
  'include/Gleam_ICommandList.h',
  'include/Gleam_IDepthStencilState.h',
  'include/Gleam_ILayout.h',
  'include/Gleam_IMesh.h',
  'include/Gleam_IProgram.h',
  'include/Gleam_IProgramBuffers.h',
  'include/Gleam_IRasterState.h',
  'include/Gleam_IRenderDevice.h',
  'include/Gleam_IRenderOutput.h',
  'include/Gleam_IRenderTarget.h',
  'include/Gleam_ISamplerState.h',
  'include/Gleam_IShader.h',
  'include/Gleam_IShaderResourceView.h',
  'include/Gleam_ITexture.h',
  'include/Gleam_IncludeGLFWNative.h',
  'include/Gleam_IncludeVulkan.h',
  'include/Gleam_Keyboard.h',
  'include/Gleam_Layout.h',
  'include/Gleam_Matrix3x3.h',
  'include/Gleam_Matrix4x3.h',
  'include/Gleam_Matrix4x4.h',
  'include/Gleam_Mesh.h',
  'include/Gleam_MeshGeneration.h',
  'include/Gleam_Mouse.h',
  'include/Gleam_OBB.h',
  'include/Gleam_Plane.h',
  'include/Gleam_Program.h',
  'include/Gleam_ProgramBuffers.h',
  'include/Gleam_ProxyAllocator.h',
  'include/Gleam_Quaternion.h',
  'include/Gleam_RasterState.h',
  'include/Gleam_RenderDevice.h',
  'include/Gleam_RenderOutput.h',
  'include/Gleam_RenderTarget.h',
  'include/Gleam_RendererDefines.h',
  'include/Gleam_SamplerState.h',
  'include/Gleam_Shader.h',
  'include/Gleam_ShaderInclude.h',
  'include/Gleam_ShaderResourceView.h',
  'include/Gleam_SmartPtrs.h',
  'include/Gleam_String.h',
  'include/Gleam_Texture.h',
  'include/Gleam_Transform.h',
  'include/Gleam_Vec2.h',
  'include/Gleam_Vec3.h',
  'include/Gleam_Vec4.h',
  'include/Gleam_Vector.h',
  'include/Gleam_VectorMap.h',
  'include/Gleam_VulkanWrangler.h',
  'include/Gleam_Window.h',
  'include/Gleam_Window_Defines.h',
]

source_files = [
  'src/Direct3D11/Gleam_BlendState_Direct3D11.cpp',
  'src/Direct3D11/Gleam_Buffer_Direct3D11.cpp',
  'src/Direct3D11/Gleam_CommandList_Direct3D11.cpp',
  'src/Direct3D11/Gleam_DepthStencilState_Direct3D11.cpp',
  'src/Direct3D11/Gleam_Layout_Direct3D11.cpp',
  'src/Direct3D11/Gleam_Mesh_Direct3D11.cpp',
  'src/Direct3D11/Gleam_ProgramBuffers_Direct3D11.cpp',
  'src/Direct3D11/Gleam_Program_Direct3D11.cpp',
  'src/Direct3D11/Gleam_RasterState_Direct3D11.cpp',
  'src/Direct3D11/Gleam_RenderDevice_Direct3D11.cpp',
  'src/Direct3D11/Gleam_RenderOutput_Direct3D11.cpp',
  'src/Direct3D11/Gleam_RenderTarget_Direct3D11.cpp',
  'src/Direct3D11/Gleam_SamplerState_Direct3D11.cpp',
  'src/Direct3D11/Gleam_ShaderResourceView_Direct3D11.cpp',
  'src/Direct3D11/Gleam_Shader_Direct3D11.cpp',
  'src/Direct3D11/Gleam_Texture_Direct3D11.cpp',
  'src/Gleam_AABB.cpp',
  'src/Gleam_Frustum.cpp',
  'src/Gleam_Global.cpp',
  'src/Gleam_MeshGeneration.cpp',
  'src/Gleam_OBB.cpp',
  'src/Gleam_Plane.cpp',
  'src/Gleam_ShaderInclude.cpp',
  'src/Gleam_Transform.cpp',
  'src/Gleam_VulkanWrangler.cpp',
  'src/Gleam_Window.cpp',
]

extra_files = [
]

include_dirs = [
  'include',
  '../Gaff/include',
  '../../Dependencies/EASTL/include',
  '../../Dependencies/glfw/include',
  '../../Dependencies/glm',
  #'../../Dependencies/vulkan'
]

build_args = [
]

if is_msvc
  build_args += ['-D_CRT_SECURE_NO_WARNINGS']
endif

##################
# Gleam Variables.
##################
gleam_windows_libs = ['D3dcompiler', 'dxgi', 'dxguid']
gleam_defines = []
gleam_links = []

if is_windows
  renderer = get_option('renderer')

  if renderer == 'd3d11'
    gleam_defines += ['-DGLEAM_USE_D3D11']
    gleam_windows_libs += ['d3d11']
  elif renderer == 'd3d12'
    gleam_defines += ['-DGLEAM_USE_D3D12']
    gleam_windows_libs += ['d3d12']
  elif renderer == 'vulkan'
    gleam_defines += ['-DGLEAM_USE_VULKAN']
    gleam_links += [] # $TODO: Fill in Vulkan libraries to link against.
  endif

elif is_linux
  gleam_defines += ['-DGLEAM_USE_VULKAN']
  gleam_links += [] # $TODO: Fill in Vulkan libraries to link against.

elif is_mac
  # renderer = get_option('renderer')

  # if renderer == 'vulkan'
  #   gleam_defines += ['-DGLEAM_USE_VULKAN']
  #    gleam_links += [] # $TODO: Fill in Vulkan libraries to link against.
  # else
    gleam_defines += ['-DGLEAM_USE_METAL']
    gleam_links += [] # $TODO: Fill in Metal libraries to link against.
  # endif
endif

gleam = static_library(
  'Gleam',
  header_files,
  source_files,
  include_directories: include_dirs,
  cpp_args: default_cpp_args + build_args + gleam_defines,
)
