#####################################################################################
# Copyright (C) by Nicholas LaCroix
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.
#####################################################################################

header_files = [
  'include/Attributes/Shibboleth_EngineAttributesCommon.h',
  'include/Attributes/Shibboleth_InstancedAttributes.h',
  'include/Config/Shibboleth_Config.h',
  'include/Config/Shibboleth_EngineConfig.h',
  'include/Containers/Shibboleth_InstancedArray.h',
  'include/Containers/Shibboleth_InstancedArrayReflection.h',
  'include/Containers/Shibboleth_Queue.h',
  'include/Containers/Shibboleth_SparseStack.h',
  'include/Containers/Shibboleth_Vector.h',
  'include/Containers/Shibboleth_VectorMap.h',
  'include/FileSystem/Shibboleth_IFileSystem.h',
  'include/FileSystem/Shibboleth_LooseFileSystem.h',
  'include/Log/Shibboleth_LogManager.h',
  'include/Ptrs/Shibboleth_ArrayPtr.h',
  'include/Ptrs/Shibboleth_InstancedPtr.h',
  'include/Ptrs/Shibboleth_InstancedPtrReflection.h',
  'include/Ptrs/Shibboleth_ManagerRef.h',
  'include/Ptrs/Shibboleth_RefCounted.h',
  'include/Ptrs/Shibboleth_SmartPtrs.h',
  'include/Reflection/Shibboleth_EnumReflectionDefinition.h',
  'include/Reflection/Shibboleth_IAttribute.h',
  'include/Reflection/Shibboleth_IEnumReflectionDefinition.h',
  'include/Reflection/Shibboleth_IReflection.h',
  'include/Reflection/Shibboleth_IReflectionDefinition.h',
  'include/Reflection/Shibboleth_IReflectionFunction.h',
  'include/Reflection/Shibboleth_IReflectionObject.h',
  'include/Reflection/Shibboleth_Reflection.h',
  'include/Reflection/Shibboleth_ReflectionBase.h',
  'include/Reflection/Shibboleth_ReflectionBuilder.h',
  'include/Reflection/Shibboleth_ReflectionDefines.h',
  'include/Reflection/Shibboleth_ReflectionDefinition.h',
  'include/Reflection/Shibboleth_ReflectionDefinitionVariable.h',
  'include/Reflection/Shibboleth_ReflectionMacros.h',
  'include/Reflection/Shibboleth_ReflectionManager.h',
  'include/Reflection/Shibboleth_ReflectionOfType.h',
  'include/Reflection/Shibboleth_ReflectionUtils.h',
  'include/Reflection/Shibboleth_ReflectionVar.h',
  'include/Reflection/Shibboleth_ReflectionVarFlags.h',
  'include/Reflection/Shibboleth_ReflectionVarFunction.h',
  'include/Reflection/Shibboleth_ReflectionVarHash.h',
  'include/Reflection/Shibboleth_ReflectionVarMap.h',
  'include/Reflection/Shibboleth_ReflectionVarReflectionDefinition.h',
  'include/Reflection/Shibboleth_ReflectionVarReflectionOfType.h',
  'include/Reflection/Shibboleth_ReflectionVarVector.h',
  'include/Reflection/Shibboleth_ReflectionVersion.h',
  'include/Shibboleth_App.h',
  'include/Shibboleth_AppConfigs.h',
  'include/Shibboleth_AppUtils.h',
  'include/Shibboleth_Broadcaster.h',
  'include/Shibboleth_Curve.h',
  'include/Shibboleth_Defines.h',
  'include/Shibboleth_DynamicLoader.h',
  'include/Shibboleth_DynamicLoaderFwd.h',
  'include/Shibboleth_EngineDefines.h',
  'include/Shibboleth_Error.h',
  'include/Shibboleth_FileWatcher.h',
  'include/Shibboleth_HashString.h',
  'include/Shibboleth_IApp.h',
  'include/Shibboleth_IMainLoop.h',
  'include/Shibboleth_IManager.h',
  'include/Shibboleth_IModule.h',
  'include/Shibboleth_ISubsystem.h',
  'include/Shibboleth_ITransformProvider.h',
  'include/Shibboleth_Image.h',
  'include/Shibboleth_JSONSerializeWriter.h',
  'include/Shibboleth_JobPool.h',
  'include/Shibboleth_JobPoolFwd.h',
  'include/Shibboleth_Math.h',
  'include/Shibboleth_MessagePackSerializeWriter.h',
  'include/Shibboleth_ModuleMacros.h',
  'include/Shibboleth_RuntimeVarManager.h',
  'include/Shibboleth_RuntimeVarManagerFwd.h',
  'include/Shibboleth_SerializeInterfaces.h',
  'include/Shibboleth_SerializeReader.h',
  'include/Shibboleth_SerializeReaderWrapper.h',
  'include/Shibboleth_String.h',
  'include/Shibboleth_SubsystemCollector.h',
  'include/Shibboleth_ThreadAllocator.h',
  'include/Shibboleth_Utilities.h',
]

source_files = [
  'src/Attributes/Shibboleth_EngineAttributesCommon.cpp',
  'src/Attributes/Shibboleth_InstancedAttributes.cpp',
  'src/Config/Shibboleth_Config.cpp',
  'src/Config/Shibboleth_EngineConfig.cpp',
  'src/Containers/Shibboleth_InstancedArray.cpp',
  'src/FileSystem/Shibboleth_LooseFileSystem.cpp',
  'src/Log/Shibboleth_LogManager.cpp',
  'src/Reflection/Shibboleth_Reflection.cpp',
  'src/Reflection/Shibboleth_ReflectionBase.cpp',
  'src/Reflection/Shibboleth_ReflectionManager.cpp',
  'src/Shibboleth_App.cpp',
  'src/Shibboleth_Broadcaster.cpp',
  'src/Shibboleth_IManager.cpp',
  'src/Shibboleth_ISubsystem.cpp',
  'src/Shibboleth_Image.cpp',
  'src/Shibboleth_JSONSerializeWriter.cpp',
  'src/Shibboleth_Math.cpp',
  'src/Shibboleth_MessagePackSerializeWriter.cpp',
  'src/Shibboleth_RuntimeVarManager.cpp',
  'src/Shibboleth_SerializeReaderWrapper.cpp',
  'src/Shibboleth_SubsystemCollector.cpp',
  'src/Shibboleth_Utilities.cpp',
]

extra_files = [
  'include/Containers/Shibboleth_InstancedArrayReflection.inl',
  'include/Ptrs/Shibboleth_InstancedPtrReflection.inl',
  'include/Reflection/Shibboleth_EnumReflectionDefinition.inl',
  'include/Reflection/Shibboleth_ReflectionBase.inl',
  'include/Reflection/Shibboleth_ReflectionBuilder.inl',
  'include/Reflection/Shibboleth_ReflectionDefinition.inl',
  'include/Reflection/Shibboleth_ReflectionDefinitionVariable.inl',
  'include/Reflection/Shibboleth_ReflectionVar.inl',
  'include/Reflection/Shibboleth_ReflectionVarFlags.inl',
  'include/Reflection/Shibboleth_ReflectionVarFunction.inl',
  'include/Reflection/Shibboleth_ReflectionVarHash.inl',
  'include/Reflection/Shibboleth_ReflectionVarMap.inl',
  'include/Reflection/Shibboleth_ReflectionVarReflectionDefinition.inl',
  'include/Reflection/Shibboleth_ReflectionVarReflectionOfType.inl',
  'include/Reflection/Shibboleth_ReflectionVarVector.inl',
  'include/Reflection/Shibboleth_ReflectionVersion.inl',
  'include/Shibboleth_Broadcaster.inl',
]

include_dirs = [
  'include',
]

generated_files = [
  custom_target(
    'Gen_ReflectionInit.h',
    output: 'Gen_ReflectionInit.h',
    command: [code_generator, 'engine_header', '-rp', '@SOURCE_ROOT@', '-of', '@OUTPUT@'],
    depends: [code_generator],
    build_always_stale: true,
    build_by_default: true,
  ),
  custom_target(
    'Gen_StaticReflectionInit.h',
    output: 'Gen_StaticReflectionInit.h',
    command: [code_generator, 'engine_static_header', '-rp', '@SOURCE_ROOT@', '-of', '@OUTPUT@'],
    depends: [code_generator],
    build_always_stale: true,
    build_by_default: true,
  )
]

build_args = [
]

dependencies = [
  zlib_ng_dep,
  libtiff_dep,
  libpng_dep,

  gaff_dep,
  gleam_dep,
]

non_static_dependencies = [
  memory_dep,
]

static_dependencies = [
  memory_static_dep,
]

# Version of engine lib for static binaries (eg: tests and tools)
engine_static = static_library(
  'EngineStatic',
  header_files,
  source_files,
  generated_files,
  include_directories: include_dirs,
  extra_files: extra_files,
  cpp_args: default_cpp_args + build_args,
  dependencies: dependencies + static_dependencies,
)

engine = static_library(
  'Engine',
  header_files,
  source_files,
  generated_files,
  include_directories: include_dirs,
  extra_files: extra_files,
  cpp_args: default_cpp_args + build_args,
  dependencies: dependencies + non_static_dependencies,
)

engine_static_dep = declare_dependency(
  include_directories: include_dirs,
  link_with: [engine_static],
  dependencies: dependencies + static_dependencies,
)

engine_dep = declare_dependency(
  include_directories: include_dirs,
  link_with: [engine],
  dependencies: dependencies + non_static_dependencies,
)

all_core += engine
